<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Null Space]]></title>
  <link href="http://Aquietzero.github.com/atom.xml" rel="self"/>
  <link href="http://Aquietzero.github.com/"/>
  <updated>2012-12-31T23:49:01+08:00</updated>
  <id>http://Aquietzero.github.com/</id>
  <author>
    <name><![CDATA[zero]]></name>
    <email><![CDATA[zhaoyunhaosss@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Summary of 2012]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/12/31/summary-of-2012/"/>
    <updated>2012-12-31T22:49:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/12/31/summary-of-2012</id>
    <content type="html"><![CDATA[<p>眨眼之间一个月的时间过去了，在这个月里我没有做任何的更新，感觉比较惭愧，但实在是忙得不可开交，连写总结的时间都没有了。现在近年末，还有一个小时就2013了，看来我必须得在这一个小时内完成这篇总结，这样才算是一片年终总结。今年有好多第一次呢~</p>

<h2 id="section">关于兼职与实习</h2>

<p><strong>今年是我第一次找兼职，找实习，并且赚到微薄的一些钱的一年</strong>，我用这些钱给我妈买了ipad，然后换来了一部macbook。虽然这个兼职耗费了我大概快一年的时间，虽然一开始也有一点不愉快，但是那些因素很快就过去了，我依然在用我的第二技能来赚着外快，当然，我本人是不太喜欢将这个第二技能转变为第一技能的，但是从年末的情况看来，我真的慢慢，慢慢地偏向于前端了。</p>

<p>在UC的实习也令我度过了愉快的三个月，关于这个我已经写过两篇文章了，所以在此就不再描述了。</p>

<h2 id="section-1">泰国旅游</h2>

<p><strong>今年是我人生第一次出国</strong>，而去的就是泰国。说实话，在去之前我满怀憧憬，但实际上泰国并不是一个可以令充满想象的国家，其给我的感觉就是二十年前的中国。但是中途却有很多经历令我流连忘返并且印象深刻，我不打算在此详细叙述整个旅途的过程，而是希望在之后有时间，将照片好好整理从而写一篇游记。</p>

<h2 id="section-2">香港之旅</h2>

<p>从泰国回来以后我立刻又奔赴了香港一趟，这次旅途或许就改变了我的一生。</p>

<p>之前经由师兄的介绍进入了一个团队，这次去香港的目的就是去参观他们的办公室。他们的办公室在香港的科技园，我从没想过，香港科技园会是如此的漂亮。只可惜他们目前都在广州，这个美丽的办公室就此浪费了…</p>

<p>这是我第二次去香港，上一次好像已经是初中的事情了，那时候去香港给我留下的唯一印象就是香港的云吞面非常好吃。这次去香港，我才发现香港给我的就是一种五光十色的狭窄的感觉。为什么说五光十色呢，因为香港色彩很多，不论是路边的灯光，还是街头的美食，无论是来往的路人，还是地铁上的乘客。为了节省住宿的费用，我们直接就睡在办公室了，那种经历当然也是第一次，很新奇，但是睡得并不好。</p>

<p><strong>去香港的那两天是我人生唯一的连续两天不洗澡</strong>，因为原来打算就是晚上去白天回的，结果Fong忽然跟我们说有个重量级的人要去香港，所以要多呆一天，其实到了最后，我们也还是没有机会看到那个重量级的人，不过以后应该还是会有机会的。</p>

<p>另一个令我感到新奇的地方就是，团队的人都很说得来，没想到老大居然是读物理的，而且明哥(其实应该是铭哥，不过大家说多了就不在意了…)也在物理，哲学方面很说得来。还记得在回来的列车上，在我们上车之后还吵吵闹闹的，但是我们渐渐地把话题转向了物理和哲学，结果渐渐地整节车厢都安静了下来。当我们讨论到“人活着究竟有什么意义呢？”的时候，我就只能听到我们三个人的声音在车厢里回荡。那确实是美好的回忆。</p>

<p>目前在这个团队中所接受的工作确实挺有挑战，但是同时出来的效果也起到了一定的鼓舞作用，但是因为各种原因，现在还是不能说太多了。</p>

<h2 id="section-3">关于专业学习和工作</h2>

<p>本来十一月还是懒懒散散计划满满的，结果十二月以来，各种项目就把我的时间冲击得支离破碎。本来在十一月计划得复习大一大二的数学，顺便复习一下高中物理以及科普一下量子物理的，而且计划也执行得颇为顺利，但是十二月来的项目立刻就把我养成了一两个月的好习惯完全废掉了。俗话说得好啊，一两年养成的习惯一两天就能够打破了。在十二月里，我的生活规律渐渐被打破，在学校要忙毕业论文，一个团队的项目，还有一个校外团队的项目，而在其余时间，我都得奉献给那个带我去香港参观的团队，其实他们的项目是最令我神往的。所以，除此之外我基本上没有任何的娱乐时间了，连思思都没时间见了。</p>

<p>其实在我看来，这些奋斗或许就是那么的一到两年，但是我所学到的，可能受用终身，所以我并没有放弃其中的任何一项。我知道多线程工作的坏处，但是，这几件事对我来说真的是尤其的重要，我一件都不希望将其落下，希望诸位关心我的人能默默地保佑我。</p>

<h2 id="section-4">关于法语</h2>

<p>我对法语真的是充满了愧疚，因为我一直奉献在上面的时间并不是很多，所以一直进步甚微。上半年的学期无可厚非，因为课太多了，但是这个学期非常空闲，而我奉献在上面的时间也是无可奈何的少，最可恶的是在十一月，我还大大声声地跟老实说这个学期我事情很少，可以好好学习法语，将过去落下的都补回来。只可惜十二月一到，什么诺言就都不攻自破了。由于1月7号被可恶的web安全考试占据了，所以我被迫把法语的口语考试提前到今天，在2012的最后一天考法语感觉特别地悲哀，因为真正到我的时候，我才发现，这有可能就是我跟老师的最后一次法语对话了，感觉非常不舍。而且在空荡荡的教室里，更有那种悲哀寂寥的气氛。因为考生都是逐个逐个来，而我又得赶着回家，所以到最后也还是没能和老师好好地谈一下之后的学习，这个确实有点失望…</p>

<h2 id="section-5">关于人生</h2>

<p>这一年我改变了很多。</p>

<ul>
  <li>我发现我并不喜欢在大公司工作。</li>
  <li>我发现我自己有很多时候还是悠游寡断。</li>
  <li>我发现我有时候又过分地冲动，例如乱接项目。</li>
  <li>我发现我渐渐地不反对婚前性行为了。</li>
  <li>我发现其实我还希望继续学习下去，无论是基础的还是专业的。</li>
  <li>我发现我的能力还有很大提高的空间。</li>
  <li>我发现我真的很喜欢法语，比我想象中要喜欢很多。</li>
  <li>我发现我真的无助，因为没有什么人，至少是身边的人，跟我走同样的方向。</li>
  <li>我发现时间对我来说真的不怎么够，即使我晚上三四点睡觉，早上九点十点起。</li>
  <li>我发现我的欲望在不断膨胀。</li>
  <li>我发现我的写作风格完全改变了，没有以前那么多废话，当然也没有了以前的条理。</li>
</ul>

<h2 id="section-6">关于明天</h2>

<p>明天很快就会来，但是我们却永远都到不了明天，只能无限接近，当你觉得你到达了明天，其实你已经在今天了…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[非正常忙碌]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/29/fei-zheng-chang-mang-lu/"/>
    <updated>2012-11-29T00:40:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/29/fei-zheng-chang-mang-lu</id>
    <content type="html"><![CDATA[<p>最近处于非正常忙碌状态，各种烦恼…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: 超越时空]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/19/chao-yue-shi-kong/"/>
    <updated>2012-11-19T23:50:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/19/chao-yue-shi-kong</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://Aquietzero.github.com/images/bookcovers/超越时空.jpg" /></p>

<p>今天看完了《超越时空》，感情非常的复杂。这个“复杂”并不是不负责任地乱用概括性词语，而是确实地多种情感交织在一起，难以拆解，难以细说。但是我依然会在本文尽量记录自己的感觉，虽然不知道能不能成功。</p>

<p>这本书是<a href="https://plus.google.com/u/0/102456197990353170372/posts">tian qing</a>推荐的，确实是一本好书，但是电子版质量也太差了，所以最后还是买了纸质版来看。纸质版的印制相当的不错，封面设计得简洁美观，里面的排版也很舒服，所以整个看书过程可以说是非常愉悦的。</p>

<p>其实我不能说是看完了这本书，因为书中有相当数量的语句以及概念我是不能理解的。但是我知道以我现在的知识水平并不能完全将其理解，所以我也没有专门去深究书中的某些概念以及表达，而是以此作为对自己的一个动力，这方面在下面会说到。所以总的来说，对于这本书，我目前也只是走马观花，当它是科普书罢了，但是这已经带给我很多思考了。</p>

<h2 id="section">有关学习</h2>

<p>似乎每次看完书都会带给我一些学习上的思考，而这往往是首当其冲的。</p>

<p>自从上次看完《上帝掷骰子吗？—量子物理史话》以后，我就立刻有了复习并继续学习数学物理的冲动了。其实这也不仅仅是看完书的头脑发热，而是激起了我一直犹豫不决的决定。因为选择了保研的缘故，我现在可以说是有比较多的空闲时间的，为了以后能更好地驾驭技术，我觉得数学必不可少。但是由于个人的惰性，一直没有什么能唤起我拿起那些大一的数学书来复习。而那本量子物理史话就正正充当了这个角色。自从十一月以来，我开始复习线性代数以及高等数学，顿时发现自己以前确实对某些概念一知半解，甚至混淆，这些都会以博文的形式记录，这里就不多说了。</p>

<p><strong>这本书则给了我更深一层的思考。因为我感觉，有些概念，特别是抽象层次很高的概念，如果我们不在我们思想发育的黄金时期来学习，来掌握的话，可能一辈子都无法理解。</strong>随后我就找了一张数学学科结构图来看，发现要触及量子物理场论以及广义相对论，需要的数学准备实在是太多了，估计在我的黄金十年也学不完。况且我又不是专攻数学和理论物理，所以这等于为我的求知欲设下了重重的屏障。当然，我也没有因此而打算放弃，因为毕竟有很多数学都是我需要的，无论是做软件设计还是搞研究，所以这并没有什么冲突。</p>

<h2 id="section-1">有关高维空间</h2>

<p>贯穿本书的一个主题是：<strong>引入高维空间能使理论简化。</strong></p>

<p>其实在阅读本书以前，我一直有一个误区，那就是没有搞清楚“物理维度”和“数学维度”的区别。在学习线性代数的时候，可以将维度理解为空间基的分量数，而这也可以简单理解为一个有序元组的元素个数，其实就是一种表示，无论是多少维，都是数学运算上的体现，并不存在对世界认识有任何的改变。但是物理上的维度在我们看来可能就有点不一样了，我们会刻意地将长，宽，高，时间说成是前四维。如果物理学家跟我们说我们生活在十维空间里（而事实上他们也是这么说），那么我们或许就会刻意去想象高出来的维数是怎样的，它们叫什么，如何影响我们。</p>

<p>看了这本书以后纠正了我对其的看法。其实物理上的维数的引入仅仅是数学计算的一个结果。理论物理学家希望有一个大一统的理论来统一描述自然界中四种基本的力，而他们发现，通过引入高维空间能使计算得到简化，使模型变得简单，并且发现对于现在来说，十维的黎曼规度空间足以囊括四种基本力，所以有如下说法：四种基本的自然力在十维空间中得到了统一。并且，据他们所言，这十维还分成了两个世界，一个是我们生活的四维空间，而另一个是蜷缩到普朗克尺度的六维空间。当然，我还没能去接触那些数学，但我感觉这个十维实际上也就是数学表达式上的一种形式，其中四维能找到对应于现实的物理解释，并且我们能够感知，而另外的六维则是预言。有可能以后有新的发现，需要更大维度的黎曼规度空间来囊括，那或许又不止十维了。</p>

<p>再有，书中对人对高维空间的感觉做了非常形象地描述。书中反复出现的二维国令我想起了数学漫步里面的那些二维蜥蜴，其实应该是艾舍尔的平面蜥蜴，他们都无法感知三维世界，更没有“向上”或是“向下”的概念，他们都觉得那些有三维经历的同伴是疯子。其实想想人类也可以做同样类比，我们同样不能感受高维的空间，但是我们不能否定其存在的可能性，因为那就像我们确实存在于比二维蜥蜴更高维的空间之中一样，这可能是事实。</p>

<h2 id="section-2">有关超弦理论</h2>

<p>记得当初在高中看这一概念的时候，可谓毫无头绪，估计我当时就不了解这个理论是用来干嘛的。其实近几十年来，理论物理学家都希望寻求所谓的大一统理论来概括四种自然力，最新的最有生命力的可算是超弦理论了。</p>

<p>自从出现粒子对撞机以来，上百种亚原子粒子相继被发现，这对于统一之路并不是什么好消息。毕竟要找到一种既能统一这上百种亚原子粒子，并且又能统一引力的学说，确实不是那么的容易。在此之前还必须看看理论物理学家们是如何看待引力的。</p>

<p>爱因斯坦是希望用连续光滑的方式来描述引力的，他将其表述为空间的扭曲产生力；而从量子力学看来，由于电磁力，强力和弱力都可以看成是因为交换粒子而产生，所以他们就假象存在着一种“引力子”，而引力则是通过物体交换“引力子”而产生的。这样看来，似乎从量子力学的角度来看问题会简单一些，因为一切力都可以表述为特定粒子的交换过程。而粒子数量何其之多，要统一它们必须要站在一定的高度之上。根据上面提到的，通过引入高维空间能简化理论，那么这些各种各样的例子在高维空间里看起来像什么东西呢？</p>

<p>像一根根以不同频率震动的闭合小弦！说实话，这个理论在我看来确实优美无比（当然不是从数学的角度来说的）。想想我们的DNA，虽然每个人的DNA螺旋结构是一样的，而且组成DNA的基本化学成分是相同的，其基本的单元嘌呤，嘧啶数量也很少，但是通过这些简单的基本单元却能构成无穷多的遗传组合。这就是我们每个人都不一样的本质原因。同样，我们可以把那些亚原子粒子看作是同源而生，而它们的元就是闭合的小弦，这些小弦在高维空间以不同的频率来震动，我们在思维空间中观测到的就是多种多样的亚原子粒子了。</p>

<p>这样其实以一种很好的方式结合了爱因斯坦的愿望以及量子理论。因为它的本质是那些震动的闭合的小弦，它们在高维空间具有简单的描述，并且是纯几何的，这正是爱因斯坦的希望，即用纯几何方法来推导出物理定律。但是在低维空间中，它又可以描述多种多样的亚原子粒子，而这又是量子物理的思想。所以说它在一定程度上确实很好地将两者结合了起来。当然，我也是希望以后能从数学的角度来感受其美的。</p>

<h2 id="section-3">有关外星生物的探索</h2>

<p>本书靠后的地方还说到了有关外星生物的探索问题。我对此感觉还是比较深的。因为据科学家所做的宇宙大爆炸的电脑模拟，其实适合生命居住的星球数目还是挺多的，我还记得其描述的距离地球的平均半径也就只有15光年而已，但为什么我们还没有探测到地外生命呢？</p>

<p>其实我们存在于地球的时间尺度相对于宇宙的寿命是非常短的，可以说是一瞬。而对于我们真正达到探测地外生命的技术的时间来说，就更为短了。可能在漫长的宇宙历史中，已经出现过很多璀璨的文明，但它们都或许在我们诞生之前很多很多年就被毁灭掉，消亡掉了；又或许在我们消亡以后的若干年以后出现。从这个时间尺度上来思考这个问题，或许我们根本就不会在我们的历史中探测到地外生命。</p>

<p>虽然这样说，但这样的描述仍然阻止不了我对其的想象，因为我总是希望有那么的一点机会来瞥视一下另外的文明。但是书中也强调，真正发现了地外文明或许不是一件好事，因为文明之间肯定会有发展的差异，而发展更为强势的一方会有可能有征服另一方的欲望，如果地球处于劣势之中，那岂不是自寻烦恼。</p>

<p>书中还谈到了一个有趣的方面，那就是，地球虽然没掌握超空间技术，但是有可能有别的文明掌握了啊，那么它们怎么就不过来找我们，并与我们分享他们的技术呢？书中用一个有趣的比喻来阐述这个问题：我们看到蚂蚁的第一反映是觉得他们很渺小，我们并不会主动上前与其交流，或许还会踩上一脚。也就是说，那些比我们高级很多先进很多的文明或许根本就没有和我们沟通交流的愿望。</p>

<h2 id="section-4">有关人类在宇宙中的地位</h2>

<p>文中提到文明可以分为三类：一类文明可以操纵星球上的物理现象，如气候等；二类文明可以操纵所在星系的能源，如利用恒星的核能之类；三类文明可以脱离星系，到别的星系去殖民。如此看来，人类所处的仅仅算是零类文明而已。在此看来，人类确实是非常渺小。但是，这么渺小的人类却可以通过自身的努力，在短短数百年里，发现出如此精妙的物理定律，而这些定律能够描述那些我们可能永远都到不到的地方的行为，对此我确实感到非常震撼。人类甚至能理性地看待超空间，而不并不会因为无法观察到它而觉得其荒谬。这确实是很了不起的！</p>

<h2 id="section-5">有关哲学讨论的需要</h2>

<p>高中政治一句话毒害了我们很久：<strong>哲学是科学的科学</strong>。这话并不无道理，但是渐渐地，当我看到很多物理学家都在为那些数学公式所折射出神奇的哲学含义而头痛时，我就开始觉得在这些问题上进行哲学讨论的意义并不是那么大了。</p>

<p>在近代以来，理论物理和实验物理的角色已经互换了。在伽利略的时代，物理学家通过实验来总结规律，而现在，往往是理论物理学家首先从数学推导中有新的预言或者解释，然后再通过实验物理学家去验证。但是，在追求大一统的过程中，在探索宇宙最深层次的奥秘中，实验往往是不可行的。也就是说，创世的实验是不能完成的，这意味着，我们只能从理论上证明而不能去检验。有些人抨击说：不能检验的就不能说是真理了。但是，那些人有可能会被划分到愚蠢的二维蜥蜴行列了。因为对于我们无法察觉的高维空间，我们并不能否认其存在的可能性，而如果规律在高维空间中得到对称的完美的统一，那么我还是乐意相信自然界的本质是简洁以及对称的。我们并不需要苛刻地去追究那十维究竟是哪十维，我们也不能奢望有朝一日我们能真的感受它或者验证它，我们能用简洁的方式将其表达，已经足够了。</p>

<p>薛定谔方程也常常被拿来去做哲学讨论，不确定性原理也一样。其实，既然哲学里面都说真理有适用的范围，而这些理论在相当一个广度的应用中是没有问题的，那就说明它们确实客观地正确地描述了一类的现象，我们也不能揪住其弱点不放，说其映射出来的哲学很荒谬。</p>

<p>其实如果真的存在我们无从察觉的高维世界，那么一切本质应该是荒谬才对！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Footprint: Macau]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/10/footprint-macau/"/>
    <updated>2012-11-10T11:10:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/10/footprint-macau</id>
    <content type="html"><![CDATA[<p>昨天去了澳门一趟，本意是想在网购苹果之前看看澳门那些实体店的价格，但是不料澳门令我失望了。其实本身我就不是抱有太大的希望，于是就当作是去澳门走走而已。</p>

<p>印象之中我只去过两次澳门，一次是很久以前和爸妈一起去的，另一次是和C.C.去的，距今也有一年有多了。这次去澳门没有感觉到太大的变化，人依旧很多，街道依然漂亮，但感情却有点不一样。</p>

<p>回程的时候，车在高速公路上飞驰，迎面而来的是一束束冲破黑暗的车灯，有节奏地一遍又一遍地扫描着我。我喜欢看着车前方那些被照亮的飞速后退的公路纹理，在车窗密闭的情况下，它们是我唯一感受到速度的证据。车中大家都熟睡在一天奔走的疲惫之中，在小憩之后我却异常精神，但是那纷乱的车灯不停地闯入我脑中，以致我一直思想混乱，耳边的旋律也没有能帮助我平静下来。我写这边文章很大程度上是因为那时候混乱的思考，再有就是为弥补以后可能失去的记忆。</p>

<p>迎面的车灯越发光亮，耳边好像还伴随着几声鸟鸣，天还带有点暗暗的黑，但是我知道我得在不情愿之中挪动身体下床了。昨晚并没有很早能睡着，差不多一点半了，我还起来听了下法语帮助睡眠。今早八点出车，也不算是太早吧，但是要我六点多起床，确实有点无奈。早上的车程并没有令我觉得太漫长，在灿烂的阳光下，我浑身有一种微微刺热的感觉。这个刺热，并不是酷热，而是感觉像衣服的纤维丝都挺立了刺向我的皮肉。</p>

<p>在横琴过关，人很少，并没有延续之前在拱北的惨痛经历。</p>

<p>到达英皇的时候，父母已经觉得是时候吃点东西了。英皇三楼有个小餐厅，估计是给那些豪赌的人充饥休息的，我们去那里叫了几个面，味道却还不错。这个味道令我回想起多年以前华侨大厦的炸酱拉面，我妈说那估计是以前没什么好东西吃觉得好吃，但是这两者确实给我几乎一样的感觉。</p>

<p><img src="http://Aquietzero.github.com/images/macau/IMAG0654.jpg" /></p>

<p>这个炸酱拉面的面很细，并且有足够的嚼劲，但又没有那种特别爽滑的感觉，而是很实在的软并且韧。而炸酱肉末呢，它并没有特意去控制辣的程度，可以说比平常那些照顾广东人的餐厅的辣菜要辣的，但是却不是呛到喉咙的辣，也不是包裹舌尖的麻，而是一种肆意放射的刺激的感觉。估计正是由于这样的感觉，我瞬间就将其吃完了，每一口所放射出来的刺激催促着我的手赶紧夹起另外的一缕面，然后迅速地往口里送。</p>

<p>下了英皇，我们便往水坑尾街的方向走去。这条街可以说很古老了，街道很窄，两边的楼房中等高度，也遮了大半个天空了，抬头望去，感觉古老的住房微微欲坠。上一次和C.C.就在礼记雪糕吃了两个雪球，但是那次走这条街的时候却没怎么留意建筑，路景，这次慢慢走却拍到了一些街景。</p>

<p><img src="http://Aquietzero.github.com/images/macau/IMAG0659.jpg" /></p>

<p>这是从水坑尾街的一条天桥放眼望去的一支巷，那紧致古老的住房给我一种忧伤的感觉。这令我想起了佛山的旧区，想起了我以前光顾的理发店，还有以前放学走过的那矮矮的梯级，还有宁静围墙外面刺耳的车鸣…那简朴古老的灰色，那令人窒息的灰色，那重重简陋的墙砖里却还包裹着生机，或是闲适悠悠自得其乐的老公公老太太，或是烦躁苦闷无所适从的中年夫妻，又或是前途黯淡生活拮据的年轻租客…</p>

<p><img class="left" src="http://Aquietzero.github.com/images/macau/IMAG0663.jpg" width="300" /></p>

<p>有时候我又很喜欢这种斜跨半空天桥。它不像是广州大学城那些规规整整的人行天桥，而是更令人感觉到它的灵魂，它存在的意义。这样说可能有点夸张，但在纷乱的旧区之中穿插着这些方便人们穿梭的小飞龙，确实令人感到一种另类的生气，就像它们的灵魂使之获得了肉身，在人们不注意的时候悄悄换了一下姿势，改变了一下方向，又或许逃到了另外的一个地方去。这就是一种不对称的美感，你从不同的角度会看到其不同的形态，以至于你觉得它们确实活起来了。当你从这一边跑道另一边去观看它时可能会所发出惊叹：“啊！你怎么方向不同了？！”，它或许正用那独特的跟之前不一样的姿态得意地告诉你：“因为我活动活动了一下…”</p>

<p><img class="right" src="http://Aquietzero.github.com/images/macau/IMAG0667.jpg" width="300" /></p>

<p>紧接着我们穿过一些小路，向着大三巴的方向走去。大三巴是我最初对澳门的印象，我曾一度以为澳门的出名其实就仅仅只有一个大三巴。当然，那种认识早已无影无踪，但是不知道是不是澳门真的太小了，我每次去澳门总会有意无意地经过这个地方，当然，或许是因为这里商铺够多，美食够多。在两边店铺试食的徘徊之中，我看到了一个土耳其雪糕小店。</p>

<p>其实本来也没想过要试的，但是因为试食了一些饼干还有肉干，嘴巴也有点想冷却一下，于是就忍不住想吃了。当然我不知道这个小伙子是不是真的从土耳其来的，但是看到他那么过瘾，我拍了他一下。在把雪糕递过来的时候，他却不是规规矩矩地，而是耍了一下手法，把雪糕藏在了手的背后。当然，这种把戏在我看来有点做作，但是之后看到一个小女孩真信雪糕不见了，还在地上找，我却忍不住笑了。看到小女孩无助的表情，他才慢慢地把手背后的雪糕“转”回来，然后就是一阵围观着善意的笑声了。</p>

<p>这种雪糕跟我们平常吃的有所不同，跟麦当劳的来对比，那就是厚实很多，粘稠很多，并且没有那么香。吃得出来是新鲜的，并且吃完感觉很实在，就是估计周围人太多，我怕雪糕暴露太久不好，于是加快速度地将其了结。</p>

<p>之后出来又看到了这种深深的街景，不禁深吸一口气，将其拍了下来。其实很多人都喜欢这种街景，除了我上面所说的回忆以外，估计还欣赏其层次感。这种层次感不是错落有致的建筑所带来的，而是渐渐淡却的光的威力。</p>

<p><img src="http://Aquietzero.github.com/images/macau/IMAG0670.jpg" />
<img src="http://Aquietzero.github.com/images/macau/IMAG0676.jpg" /></p>

<p>在大三巴附近闲逛完毕以后，时间也差不多四点半了，我们转回到水坑尾街，打算试试那据说很出名的“皇冠小馆”。其位置不难找，之前在网上的描述是百脑汇附近十来米的地方。说起这个百脑汇，我本身也是打算来这里看看苹果的，以为它是一个比较大的电器商城，跟广州的百脑汇相距不远，但实际上，等我们几番周折找到这个百脑汇的时候才发现，它已经不存在了。这确实给我有一种心凉的感觉，这话还是由一个在废弃电梯旁的保安跟我说的。虽然那地方不大，但是废旧的建筑加上里面废旧的柜台，令我感觉到时光的威力。走在澳门已经有一种置身与旧瓦之间的感觉了，不知道再过一千年，这又会是何种光景。</p>

<p>从天桥过去的时候就看到这个“皇冠小馆”了，由于不是当地吃饭时间，人也不算很多。但实际上天色也已渐暗，街道两旁已有依稀的店铺亮灯，夜色也正缓缓降临。</p>

<p><img src="http://Aquietzero.github.com/images/macau/IMAG0687.jpg" /></p>

<p>根据网上描述，这里最出名的要算是虾子捞面，饺子云吞，以及海蟹粥了。感觉分量也差不多了，我们各叫了一份。</p>

<p><img class="left" src="http://Aquietzero.github.com/images/macau/IMAG0677.jpg" width="300" /></p>

<p>这个虾子捞面出乎意料的普通，也出乎意料地香。可能有一些不喜欢虾子的朋友们会觉得有点腥，但是我感觉是很香的。虽然虾子没有蟹子那样爽脆的口感，但是在微微烘烫之后拌面来吃，也确实感觉到丝丝的爽脆。当然虾子那么小，这估计也只是通感而已。至于那些面，吃起来不乏弹性，但是却没有佛山那些云吞面以及竹升面店那么爽，感觉较为真实一点。</p>

<p><img class="right" src="http://Aquietzero.github.com/images/macau/IMAG0680.jpg" width="300" /></p>

<p>至于这个云吞水饺呢，一碗里面有三个水饺和四个云吞，个人感觉佛山的水饺云吞是无法跟这个比的。其水饺大得足足撑满了一个瓷羹，里面有猪肉，木耳，还有一只新鲜的大虾，吃起来的时候大虾提供爽脆，猪肉提供美味，木耳提供丝丝不绝之感。而且水饺的皮比较结实，在吃的时候并不用担心饺子会散开，配合那淡淡的汤来吃，确实是一大享受。</p>

<p><img class="left" src="http://Aquietzero.github.com/images/macau/IMAG0682.jpg" width="300" /></p>

<p>最后就是着看上去比较大锅的海蟹粥了，大概一人两碗多一点左右。里面有一只大海蟹，感觉是真材实料的，因为蟹肉很足，我吃的几条蟹腿都充满了鼓鼓的肉，并且粥弥漫着清新的蟹味。这里所说的清新确实一点都不夸张，去试一下就知道了。</p>

<p>吃完以后将近五点有多，爸妈买完相机以后，我们打算去英皇坐车回去莲花口岸，从水坑尾街回去莲花口岸估计不需要走太久，于是我们以小步疾走的方式往英皇方向走去。尽管如此，我还是抓住了这个三叉路口。</p>

<p><img src="http://Aquietzero.github.com/images/macau/IMAG0684.jpg" /></p>

<p>其实我稍微回想了一下，发现自己从没有机会从这种角度来看三叉路口。看着眼前两边的车辆汇聚以后从脚下驶过，很有一种奇妙的感觉，却又难以描述。中间的大楼将两边的画面截然分开，并将两边的交流完全切断。左边的车辆并不知道右边的路况如何，而右边的车辆又不清楚左边是否通畅，就如同看电影，戏剧一般，当分镜向你讲述两边的故事时，你或许发现某一边在做一些神奇的事情，另一边却毫不知晓。就这样在你同时看来的两个世界，各自进行着自己的活动，却又各自跟随着时间之箭而飞逝，最后却也是汇合于一体，而不知过往的区别。</p>

<p>当我们去到英皇的时候，却被告知最后一趟去莲花口岸的车已经驶离了，留给我们的最后一个选择就是taxi了。最后当然还是以微小的时间优势及时过了关，这无疑还是幸运的，因为我们没有料到那个时间截taxi是如此地困难。</p>

<p>当我上车坐下来以后才发现，我已经挺累的了。最后迎接我的就是，那些有节奏的来车射灯，以及Celine Dion跳动的歌声了…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: 上帝掷骰子吗？—量子物理史话]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/06/shang-di-zhi-tou-zi-ma-liang-zi-wu-li-shi-hua/"/>
    <updated>2012-11-06T13:24:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/06/shang-di-zhi-tou-zi-ma-liang-zi-wu-li-shi-hua</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://Aquietzero.github.com/images/bookcovers/上帝掷骰子吗.jpg" /></p>

<p>花了近两周的时间读完了《上帝掷骰子吗？—量子物理史话》，大概每天读那么一章吧。其实这样的速度主要是因为书中有很多语言上的装饰，很多内容可能只需要一两句话就可描述清楚，但作者非得要花上一段来渲染一下场景，这个我不太喜欢。但是既然这是一本通俗读本，科普著作，这样的描写确实很符合这本书的身份的。</p>

<p>本书确实是一本好书，因为它以通俗易懂的方式介绍了量子物理的发展历程，我读书的时候一般比较喜欢角色代入，所以在看此书的时候异常激动，曾多次将自己代入那些量子大将上面，感觉自己就完全经历了这样的一个过程，波澜壮阔，沧海桑田。本书除了较为全面地介绍了量子物理的发展史以外，还以通俗的方式讲述了量子物理的一些重要概念。正如它纠正了我一直以来的一些错误理解，也引发了我很多的思考。</p>

<h2 id="section">关于多世界理论</h2>

<p>之前接触薛定谔的猫仅仅是从高中语文的一篇阅读，当然具体内容就忘了。我一直认为“既生又死”的含义是，只是在我们没有观测的时候不知道那只猫的死活，但是它本身可能已经死了，可能还活着，两种状态只择其一。但是现在才知道，其实根据哥本哈根的解释，在没有观测之前，猫其实是可以由一个态叠加的波函数来表示，这样说来，那只猫其实是两种态，即生和死两种态的叠加，在我们观测的一瞬间，波函数发生了坍缩，等概率地出现猫生，或者猫死的状态。在看书的过程中，其实我对这种解释的也并不是太信服，如书中所说，它引入了观测者的概念，并且它无法解释坍缩这一个过程。</p>

<p>坍缩这个过程它没法解释也没什么好说的，但是引入了观察者的概念，那问题就大了。也就是说，如果我闭上眼睛，那么我周围的事物都在以各自的波函数进行演变，各种状态都叠加在一起了，混乱不已，但是我一睁开眼睛，充当观测者了，这些混乱不已的波函数瞬间就坍缩了，一切的事物都是那么的正常。这是一种比较野蛮的，而且扯入了唯心的解释。</p>

<p>如果从多重世界(MWI)来看呢？世界无时不刻都在“分裂”，我们所处的世界只是无限多种可能之中的一个。而在我们打开盒子之际，世界可能已经分裂了无数多个，有猫生的世界，有猫死的世界。这样的解释结合波函数来看是挺好理解的，因为波函数从没有发生坍缩，而是我们的世界就处于一种态叠加之中，我们所在的当前世界就是多重世界在某一个方向上的投影。这种解释虽然绕过了坍缩的问题，但是却引发了一系列的哲学问题。我们不禁要问，究竟哪一个才是我呢？如果把人放进了那个猫的实验，实际上在盒子里的我们就是观测者了，并处于多重世界中的某一个了。而在这些世界当中，必定有一些世界是我们没有死，而另外有一些则是我们已经死了。如果，在我们已经死了的世界里面讨论我们是毫无意义的，那么就等价于我们所存在的世界必定是我们所生存的世界，这岂不是放到实验中的我们永远不死了吗？这又是跟概率相矛盾的。</p>

<p>说到多重世界不禁令我想说说之前看的一部动漫《steins gate》。这里并不讨论其情节，但是里面有一点我比较认同，那就是即使回到过去了，也不能改变到现在。其中所用到的就是多世界的原理。就是说，你回到的是你当前所在世界的过去，并且在改变过去以后，世界线分裂了，跟这里说的世界分裂其实有点类似，你在改变过去以后已经没有回到现在的概念了，因为你有可能处于改变过去以后分裂出的多条世界线中的一条，你根本就不知道别的世界线上发生了什么事情。也就是说，不同的世界其实是正交的，这跟多世界理论所说的一致。</p>

<p>在多世界理论里面有一个观点是挺吸引我的，那就是上面说到的不同世界的正交性的问题。考虑世界的波函数，它每时每刻都是多个态的叠加，而这个态则是表示在某一个时刻世界的状态。那么如何描述这个世界的状态呢？对于一个普通的刚体，我们或许可以用一个六元组来描素，即三个方向上的坐标以及三个方向上的动量，这样的一个元组我们可以看作是六维空间里面的一个点。对于世界来说，由于世界可以看作是由微粒组成，如果我们对每个微粒都进行这样的描述，这样所得到的一个元组也可以看作是一个非常高维空间中的一个点，其随着时间来运动形成一条曲线。在二维空间中，我们随便画几条线是很容易相交的，但是一旦到了三维空间，这恐怕就没那么容易了，如果是更高维的空间，那么世界线相交的几率就会变得很低。所以我们可以想象用这种方式来描述的话，我们根本就不能察觉到平行世界的存在。</p>

<h2 id="section-1">关于理论物理</h2>

<p>之前看《生活大爆炸》的时候觉得Sheldon很自负，觉得自己搞理论物理就比别人高尚很多。其实看完这本书以后，我也有同感。因为物理学和哲学都是旨在揭示世界的运行规律(注意，是世界而不是人类社会)，但是个人感觉哲学是净思考，但是物理是有依据的。虽然，可能在理论物理上，往往是先有理论然后有观测结果证实，但是理论从何而来呢？从既有的实验以及严密的数学推导。如果数学的基础没有问题的话，那么数学应该是描述世界客观运动规律的最简洁最客观的方法了，而理论物理则是用这些客观的手段来对世界进行解释，所以个人感觉要比哲学高尚一点，我并没有想挑起什么学科的高低贵贱划分等级，但是搞理论物理的，它们确实是在为解释世界而奋斗。</p>

<p>再有，自从量子物理诞生以来，物理可谓发生了翻天覆地的变化。这说明了一个问题，那就是现代物理有可能只是描述世界，解释世界的一种形式，或许某一天有新的观测无法用现有的物理来解释，那么就又有可能要重建现在的物理大厦了。科学的目的在于发现规律从而利用规律来推动社会的发展，方便人类的生活，其实只要当前的理论能解释当前世界所能观测到的物理现象，那么它无疑已经是成功的了，就像现在的量子物理。但是，顺着当前构建的大厦去思考一些问题的时候，就会毫无疑问地被导向本原的问题。</p>

<p>其实本人觉得本原的问题是没办法解决的。首先本原无法被观测，再有就是本原无法被解释。对于前者来说，如果本原被观测了，那么你如何证明那观测到的就是本原，这就导向了后者，但当你视图对本原进行解释的时候，你依旧不能解释你的解释是正确的。所以有时候我觉得我们有点可怜，就像二维的蜥蜴知道有三维的世界，并且它们还知道从三维的世界中就能看到它们所在世界的全貌，但是很可惜，它们并不能摆脱它们所处的二维世界。</p>

<h2 id="section-2">关于今后学习</h2>

<p>其实我本身就对数学物理充满兴趣，看完这本书以后不禁让我产生了学习量子物理的冲动，动因仅仅是兴趣，再有就是想感受一下那些艰辛卓绝所建立起来的数学模型究竟有多美。鉴于本人数学物理水平都有限，而且我本身也不是专业那些的，所以估计也只能当作是业余爱好来学，就跟语言一样，有时间了就看看，在漫长的人生中感受一些这些由伟人们呕心沥血出来的成果。</p>

<p>本书中还连带推荐了一些书，今后也打算看看，例如：《上帝掷骰子吗？——混沌之数学》，《皇帝新脑》，《超越时空》，《一个数学家的独白》之类的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linear Space and Euclidean Space]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/03/linear-space-and-euclidean-space/"/>
    <updated>2012-11-03T20:49:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/03/linear-space-and-euclidean-space</id>
    <content type="html"><![CDATA[<p>最近看到线性空间相关的内容，才发现以前好像就没理解过线性空间，做题也好像仅仅是套公式，做步骤。大一的时候大家都说线性代数比较抽象，难以理解，我感觉那是因为大家没有理解空间(space)这个概念，我也不能说自己就理解了，但是在线性代数里面，某些定理或者定义的描述确实与我们平常所接触到的高等数学不一样的。</p>

<h2 id="section">公理化方法</h2>

<p>百度百科上的定义如下：</p>

<blockquote>
  <p>公理化方法，就是指从尽可能少的原始概念和不加证明的原始命题(即公理、公设)出发，按照逻辑规则推导出其他命题，建立起一个演绎系统的方法。</p>
</blockquote>

<p>通过公理化方法所定义的概念毫无疑问是非常抽象的，因为它不加证明地为某个系统，某个域描述了一组“特性”，而且是一组<strong>基本特性</strong>。而人们认识事物的过程一般是通过认识了解事物外在的诸多特性来抽象出简洁的对事物的理解，这是抽象的过程。然而，如果直接给出事物内在抽象的根本的特性，你很难在短时间内建立起对这个事物的全方位的理解。当然，这里所说的<strong>事物</strong>实际上本身就是抽象的，我认为要通过简单的本质的描述来认识这样的事物有两种方法：</p>

<ol>
  <li>通过接触足够的实例(或者实体)来认识该抽象事物。</li>
  <li>通过那抽象事物的已知的本质特性来推导出它更多的外在特性。</li>
</ol>

<p>这两种方法各有优劣，而一般的教科书都是两种方法结合使用。先是通过公理化方法描述一个抽象的概念，然后通过一系列的例子来说明该抽象概念的本质特性(公理)，接着就慢慢地通过这些本质特性推出更多的外在性质(定理，推论)。我觉得这种方法对于高层次的读者来说无疑是很合理的，但是如果读者本身对公理化定义的抽象概念完全不理解，那么再多的例子也是徒劳。</p>

<h2 id="section-1">线性空间</h2>

<p>我尝试以另一种方式来阐述线性空间的概念。其实能说的角度也是有限的，我也只能尽力而为。</p>

<p>在说线性空间之前，我觉得有必要说说向量空间。因为我们以前的教科书《Linear Algebra and Its Applications》(David C. Lay)确实使我将两者等同了，后来看了别的书以后，我就对这本书深恶痛极。本来拿我们熟悉的向量空间来做例子是最合适不过的，但是在书的中部说线性空间的时候，并没有将这两者明确分开，个人感觉有点不负责任。</p>

<p>首先看看这个向量空间是什么。个人觉得，这个空间可以理解为<strong>集合</strong>，向量空间就是向量的集合，所有的向量组成的集合就是向量空间。即全体实$n$元组所组成的集合就是$\Bbb R^n$，在这个向量空间上还定义了一堆的运算：向量加法，向量减法，向量数乘，点乘等等。注意，在这些运算定义的时候是这样表述的：</p>

<blockquote>
  <p>设$A = (a_1, a_2, \cdots, a_n)$以及$B = (b_1, b_2, \cdots, b_n)$是$\Bbb R^n$中的元素，$c \in \Bbb R$定义 
$$ 
cA = (ca_1, ca_2, \cdots, ca_n), \quad <br />
A + B = (a_1 + b_1, a_2 + b_2, \cdots, a_n + b_n)
$$</p>
</blockquote>

<p>其余的运算都是以类似的方式来进行公式定义。可以说向量空间只是线性空间的一个特例，可以看看如下线性空间的定义，以作对比：</p>

<blockquote>
  <p>令$V$表示已知对象的非空集合，我们称这些对象为<strong>元素</strong>。当集合$V$满足以下十条公理时，我们称其为<strong>线性空间</strong>。<br />
<br /> <strong>1. (对加法封闭)</strong> 对$V$中任意两个元素$x$和$y$，都有$V$中唯一元素与它们对应，这个元素称为$x$和$y$的和，记作$x+y$。
<br /> <strong>2. (对实数乘法封闭)</strong> 对$V$中任意元素$x$和任意实数$a$，都有$V$中唯一元素与它们对应，这个元素称为$x$和$a$的积，记作$ax$。
<br /> <strong>3. (加法交换律)</strong> 对$V$中任意元素$x$和$y$，我们都有$x+y=y+x$。
<br /> <strong>4. (加法结合律)</strong> 对$V$中任意元素$x,y,z$，我们都有$(x+y)+z=x+(y+z)$。
<br /> <strong>5. (零元的存在性)</strong> 在$V$中存在唯一的元素$O$，使得对$V$中的任意$x$，有$x+O=x$。
<br /> <strong>6. (负元的存在性)</strong> 在$V$中任意$x$，元素$(-1)$有性质$x+(-1)x=O$。
<br /> <strong>7. (乘法交换律)</strong> 对$V$中任意元素$x$和任意实数$a$和$b$，我们都有$a(bx)=(ab)x$。
<br /> <strong>8. (对$V$中加法的分配律)</strong> 对$V$中任意元素$x,y$以及任意实数$a$，我们都有$a(x+y)=ax+ay$。
<br /> <strong>9. (对实数加法的分配律)</strong> 对$V$中任意元素$x$以及任意实数$a,b$，我们都有$(a+b)x=ax+bx$。
<br /> <strong>10. (单位元的存在性)</strong> 在$V$中任意$x$，我们有$1x=x$。</p>
</blockquote>

<p>可以看出两者定义的差异性，前者是用公式进行定义，后者是采用公理化方法进行定义。以上十条公理即使对线性空间的描述，就是说，只要满足了上述公理的空间都可以称为线性空间，<strong>这意味着元素是什么根本不是关键，而是元素在这个空间里面的行为。</strong>其线性性主要体现在对加法和数乘的规定上，可以注意到，上面的公理并没有指出两个线性空间的元素的乘积应该满足什么行为。考虑向量空间，两个向量的乘积有两种形式：点乘还有叉乘，前者的结果是一个实数，而后者则是一个向量。这意味着，空间对于这样的计算并没有封闭性。而线性空间是一个封闭的空间，所以并没有关于这类计算的公理。再有，由于这样的“乘法”定义并不唯一，将其作为公理，即这个空间的基石，也是不妥的。</p>

<p>既然线性空间是用公理化的方式来定义，那么其元素的性质可以说是完全没有限制的，只要它们的加法和数乘运算符合上述规则，那么它们所组成的空间就为线性空间。这样，定义或者判定线性空间要注意以下方面：</p>

<ul>
  <li>空间里面的元素。</li>
  <li>定义在这些元素上的加法。</li>
  <li>定义在这些元素和实数上的数乘。</li>
  <li>是否满足十条公理。</li>
</ul>

<p>这样，我们当即可以举出一些实例，例如$(\Bbb R,+, \times)$，这是我们最熟悉的实数空间，加法是实数加法，数乘是实数乘法。其实感觉我正是用教科书上的顺序来讲述…</p>

<h2 id="section-2">函数空间</h2>

<p>既然元素的类型没有限制，那就是说，我们完全可以用函数来作为元素，这就是线性空间的抽象性所带来的好处。根据上面所说的四要素，我们一步一步地定义函数空间。</p>

<ol>
  <li>函数就是这个空间里面的元素。</li>
  <li>函数之间的加法可以定义为：$(f+g)(x) = f(x) + g(x)$，其中$x$为$f$和$g$定义域的交集中的任意实数。</li>
  <li>函数的数乘可以定义为：$(af)(x) = af(x)$，其中$a$为实数。</li>
</ol>

<p>这样，我们就得到了空间$(f, +, \cdot)$。接下来就是要验证这个空间是否满足上面的十大公理。当然，这就得结合具体的函数族来进行验证了。由于教科书上都有很多例子，例如多项式，满足条件$f(1)=0$的函数等，这里就不再详述了。</p>

<h2 id="section-3">欧氏空间</h2>

<p>说起Euclid，其最大贡献要算是几何方面的了。向量空间可以说是欧几里得几何的解释模型，而$\Bbb R^n$也可以被称为<strong>欧氏空间</strong>。这样，平常所描述的线段的长度，线段之间的夹角都可以用向量空间里面定义的范数以及夹角来替代，这样在几何方面的演算就可以完全通过向量空间里面的运算来代替了。</p>

<p>既然我们已经把向量空间抽象为更高层次的线性空间了，但是在线性空间里面并没有相应于向量空间里面的范数，夹角等定义，那么我们怎么在线性空间里面进行那些有用的类几何演算(比如投影，正交之类)呢？</p>

<p>于是为了解决这样的问题很简单，只需要添加新的规则就好了。于是就有如下定义：</p>

<blockquote>
  <p>赋予了一个正定对称双线性型的实线性空间$V$称为欧氏空间。</p>
</blockquote>

<p>当然，这是一个极为抽象的简短的概括的定义。我之所以用这个定义，正是因为它够抽象。先除去那些“正定”，“对称”，“双线性型”等字眼，我们可以看出欧氏空间仅仅比线性空间多了一点点的东西，那就是我们前面所说的，基于线性空间元素之间的运算。我们可以抽象地将这种运算表示为$(x, y)$，其中$x$和$y$都是$V$里面的元素。这样，只要在线性空间上定义了这种运算，就可以得到一个欧氏空间。而这种运算必须满足<strong>正定</strong>，<strong>对称</strong>两种性质，而且这是一个<strong>双线性型</strong>。对于这三者的含义在此就不详述了，因为这里不是教科书，这些分解只是为了方便理解线性空间与欧氏空间的区别及联系罢了。</p>

<p>稍微总结一下，定义这样的运算的目的在于：在通常意义的欧氏几何中，几何图形的依赖于线段长度和直线间夹角的性质称为<strong>度量性质</strong>，在研究$\Bbb R^n$时，我们用了点积定义了长度和夹角，现在我们希望将这些概念推广到更一般的线性空间中去，为此我们将添加了这样定义运算的线性空间为欧氏空间，其命名的原因也可想而知。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The definition of irrational]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/11/01/the-definition-of-irrational/"/>
    <updated>2012-11-01T11:38:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/11/01/the-definition-of-irrational</id>
    <content type="html"><![CDATA[<p>最近在读《数学是什么》，再次碰到了有关数的一些问题。这令我回想起大一时候所学的高数，以及当时所看的《从一到无穷大》里面说到的一些问题。印象最深刻的要数<strong>实数的定义</strong>了。还记得当初初中的时候就接触过如下的定义：</p>

<blockquote>
  <p>有理数就是有限或无限循环小数，无理数就是无限不循环小数。</p>
</blockquote>

<p>其实一直到大学，我都觉得这个定理没什么特别，理所当然地将其接受了。但是无可否认，这个定义是有缺陷的。因为我们是从十进制的角度来对其作出定义(因为有理数可以表示为有理分式，如$a/b$，那么将其化为小数的时候，毫无疑问做了十进制的除法)，这就相当与这个定义与十进制挂钩了。由于十进制系统并非显示事物本质的唯一方式，所以才希望给出一个更为一般的定义。</p>

<h2 id="section">区间套定义</h2>

<p>我们把全体无限小数称为<strong>数的连续统(continuum)</strong>，或<strong>实数系</strong>，这就是有理数跟无理数的统称。为了抛开进制来对其进行定义，引入了区间套的概念。</p>

<blockquote>
  <p>让我们考虑数轴上任意一串以有理点为端点的区间$I_1, I_2, \cdots, I_n, \cdots$，它们的每一个包含在前一个里面，且使得当$n$增大时，第$n$个区间$I_n$的长度趋向于0，这样的一列区间称为一组<strong>区间套</strong>。<strong>对应于每一组这样的区间套，在数轴上恰有一个点包含在所有的这些区间中。</strong></p>
</blockquote>

<p>根据定义，这个<strong>点</strong>(各个区间套的公共点)就称为实数，如果这个不是有理点，就称之为<strong>无理数</strong>。</p>

<p>这个定义简洁明了，如果$n$是有理数的话，那么它必定会无限靠近于那些有理区间的某一个端点，也有可能就是某个有理区间的端点；如果它是无理数，那么就将需要无限个区间套了，并且它不会靠近那些区间套的左端点或者右端点，而是有可能在两个端点之间波动。<strong>从纯粹形式的观点来看，首先，我们可以在直线上只作出有理点，然后，定义一个无理点是某个有理端点区间套的一个符号，一个无理点完全由长度趋于零的有理端点区间套来描述。</strong>这实际上是说，我们并不能直观地看到线段上的无理点，但是我们知道它的存在(如$\sqrt 2$等)，于是我们就通过用我们所能观察到的(有理点)对这些我们不能观察到的但是却又存在的数进行定义，使之具有的数学性质方便我们能像操纵有理数那样操纵它们(如基本四则运算，大小比较关系等)。这实质上已经对有理数域进行了推广。</p>

<h2 id="dedekind">Dedekind分割</h2>

<p>还有一种对对无理数的定义，它是由德国数学家Dedekind提出的。</p>

<blockquote>
  <p>假设给定某种方法，把<strong>全体有理数集</strong>分为两类$A$和$B$，使得$B$类的每一个元素$b$都大于$A$类的每一个元素$a$。任何一个这种分类称为有理数集的一个<strong>分割</strong>，记为$A|B$。对于一个分割恰有三中可能，其中<strong>有且只有一种必定成立</strong>：
<br />
<br />
1) $A$有一个最大元素$a^*$。例如$A$是所有$\leq 1$的有理数，而$B$是所有$\gt 1$的有理数。<br />
2) $A$有一个最小元素$b^*$。例如$A$是所有$\lt 1$的有理数，而$B$是所有$\geq 1$的有理数。<br />
3) $A$中没有最大元素且$B$中也没有最小元素。</p>
</blockquote>

<p>在第三种情况中，Dedekind称这种分割定义了一个无理数，或简单地说这种分割就是一个无理数。这种分割的定义和用区间套所作出的定义是一致的。扩充有理数域至实数域的直接意义在于，至此，实数与数轴上的点的一一对应关系就建立起来了。这是从高中课本中给出的，但是其中还有如此神乎其神的定义，确实开了不少眼界。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translation: Parler à mon père]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/31/translation-parler-a-mon-pere/"/>
    <updated>2012-10-31T23:45:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/31/translation-parler-a-mon-pere</id>
    <content type="html"><![CDATA[<p>最近听到一首Celine Dion的歌，非常喜欢其舌音，在此分享一下。</p>

<pre><code>Je voudrais oublier le temps 我希望忘却时间
Pour un soupir pour un instant 为了暂时的歇息
Une parenthèse après la course 这是人生长跑中的小憩
Et partir où mon cœur me pouce 为了奔向我心所想
Je voudrais retrouver mes traces 我希望找回我的
Où est ma vie ou est ma place 生活轨迹
Et garder l’or de mon passé 并且在温暖的秘密花园中
Au chaud dans mon jardin secret 守护着那流金岁月

Je voudrais passer l’océan, croiser le vol d’un goéland 我希望跨洋过海，与海鸥交织翱翔
Penser à tout ce que j’ai vu ou bien aller vers l’inconnu 去思考我之所见，不如奔向未知
Je voudrais décrocher la lune, je voudrai même sauver la terre 我希望摘下月亮，我甚至希望拯救地球
Mais avant tout je voudrais parler à mon père 但是在这之前，我想跟父亲说
Parler à mon père... 跟父亲说...

Je voudrais choisir un bateau 我想挑一条船
Pas le plus grand ni le plus beau 并不用太大，也不用太漂亮
Je le remplirais des images 我要用我旅行的照片和香水
Et des parfums de mes voyages 将其填满

Je voudrais freiner pour m’assoir 我要放慢速度坐下来
Trouver au creux de ma mémoire 找到记忆的空隙
Des voix de ceux qui m’ont appris 这些声音教会了我
Qu’il n’y a pas de rêve interdit 不要让梦想停止

Je voudrais trouver les couleurs, des tableaux que j’ai dans le cœur 我希望找到心之画卷的斑斓色彩
De ce décor aux lignes pures, où je vous voie et me rassure, 在这些简单的线条装饰中，我看到了你，这使我安心
Je voudrais décrocher la lune, je voudrais même sauver la terre 我希望摘下月亮，我甚至希望拯救地球
Mais avant tout je voudrais parler à mon père 但是在这之前，我想跟父亲说
Parler à mon père... 跟父亲说...

Je voudrais oublier le temps 我希望忘却时间
Pour un soupir pour un instant 为了暂时的歇息
Une parenthèse après la course 这是人生长跑中的小憩
Et partir où mon cœur me pouce 为了奔向我心所想
Je voudrais retrouver mes traces 我希望找回我的
Où est ma vie ou est ma place 生活轨迹
Et garder l’or de mon passé 并且在温暖的秘密花园中
Au chaud dans mon jardin secret 守护着那流金岁月

Je voudrai partir avec toi 我希望和你一起启航
Je voudrai rêver avec toi 我希望和你一起梦想
Toujours chercher l’inaccessible. 一直去追寻那些遥不可及的梦想
Toujours espérer l’impossible 一直去期望不可能之物

Je voudrais décrocher la lune, je voudrais même sauver la terre 我希望摘下月亮，我甚至希望拯救地球
Mais avant tout je voudrais parler à mon père 但是在这之前，我想跟父亲说
Parler à mon père... 跟父亲说...

Je voudrais parler à mon père 我想跟父亲说
Parler à mon père... 跟父亲说...
</code></pre>

<p>在第二段中，有一句跟老师讨论了一下，但是没有什么结论，毕竟这句话还是得看理解的。</p>

<blockquote>
  <p>Je voudrais trouver les couleurs, des tableaux que j’ai dans le cœur de ce décor aux lignes pures, où je vous voie et me rassure.</p>
</blockquote>

<p>这句话可以按照上面的歌词那样分开两句，我翻译的时候也是这样分开两句来翻译，好像没什么联系。但是如果把两句从“de”的地方合起来，就得到一个“trouver qch. de qch.”的结构，意为“从…找到…”，这样整句话就可以理解为：从那些没有色彩的线条画中去寻找色彩。这样似乎比较符合逻辑，同时，“je vous voie”用的是虚拟式，就更为符合上面所说的逻辑了，因为线条画本身就没有色彩。</p>

<p>不过老师说既然是歌曲，句与句之间不用强调太多的连续性，其实看了一些歌词以后，我也发现法语歌的连贯性比较少，但是整首歌的意思却比较有感觉。翻译…还是慢慢来积累吧…这首歌其实我感觉我翻译得并不好，有些地方确实难以理解…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: 天才在左，疯子在右]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/30/book-review-tian-cai-zai-zuo-feng-zi-zai-you/"/>
    <updated>2012-10-30T11:53:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/30/book-review-tian-cai-zai-zuo-feng-zi-zai-you</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://Aquietzero.github.com/images/bookcovers/天才在左疯子在右.jpg" /></p>

<p>最近看完《天才在左，疯子在右》，感觉有点奇特。</p>

<p>回想起高中的时候，我非常喜欢心理学经济学等人文社科类学科。现在反而忘记了其原因，估计是那些时候天天沉浸在数学物理题海之中，看到一些人文的知识，并且是有一定逻辑可循的，感觉有点吸引吧。也正是因为那个时候喜欢看那种书，所以思考也比较多，或者有些还比较奇特，但我悔恨那个时候没有足够的时间做思想记录，也没有现在有触手可及的方便的电子产品做辅助，以至于很多思考都丢失了。在大学四年毫不间断地计算机科学学习中，我没有看过一本人文方面的书籍，更没有做过任何与人本身相联系的思考，就更别说写过什么这方面的思考记录了。</p>

<p>这本书可以说是这四年以来我唯一看的一本有关人文精神方面的书籍了，书中分故事讲到很多精神病人故事，思想，重新勾起了当初我对精神病，对人本性，甚至对世界本性的兴趣。这篇文章也是这么久以来写的一篇关于这方面思考的记录。估计以后还会继续下去，因为我并不是一个死板的冷冰冰的理科生，对人类语言喜爱的我永远都保有一颗感性的心。</p>

<p>书中有一些话以及有一些思想很触动我，但是我没有打算将其列出来分点评论，而是打算把我的总体感觉一并说出来。</p>

<p>首先我觉得有必要就精神病的概念简单讨论一下。其百度百科定义如下：</p>

<blockquote>
  <p>精神病指严重的心理障碍，患者的认识、情感、意志、动作行为等心理活动均可出现持久的明显的异常；不能正常的学习、工作、生活；动作行为难以被一般人理解；在病态心理的支配下，有自杀或攻击、伤害他人的动作行为。</p>
</blockquote>

<p>下面是加拿大精神健康协会所给的定义，感觉比维基百科上的稍微详细一点：</p>

<blockquote>
  <p>Psychosis is a serious but treatable medical condition that reflects a disturbance in brain functioning. A person with psychosis experiences some loss of contact with reality, characterized by changes in their way of thinking, believing, perceiving and/or behaving. For the person experiencing psychosis, the condition can be very disorienting and distressing. Without effective treatment, psychosis can overwhelm the lives of individuals and families.</p>
</blockquote>

<p>既然这是一个病，所以在定义中都有“异常”等字眼，我明白这样定义的必要性，但从根本上来说，我觉得“异常”确实是一个带有浓浓主观意味的词。在我理解起来，人的行为确实还是受着意识的控制，而意识又是通过人对外在物质世界的接触所形成的，既然每个人所接触的只能是部分的世界，就不应该存在着两个具有相同意识的人。而“异常”可以理解为“与正常相异”，那么既然没有两个相同的，就意味着我们只能用模糊集合来定义正常，其实这样就不对了，但是却没有什么其他的好办法。既然人们能把超凡脱俗，智力超群的称为“天才”，那为什么另一个极端的就称为“精神病”呢？如果两者的言论思想一般人都不容易理解，那本身就不应该有这样的区别。</p>

<p>书中作者提到，很多精神病患者其实有着完美的理论，并且虽然在“正常人”看来非常荒谬神奇，但是“正常人”却又不能轻易地将其否定，并且给出证据或推理。这实际上就仅仅说明了他们确实在思想上有别于常人而已。同理，从信仰方面来看，既然宗教信仰自由，就肯定了人们在价值观方面是平等的，那么对于精神病患者的另类精神来说，我们也应该平等对待。</p>

<p>从定义的后半部分来看，精神病患者由于其异常的的心理活动导致了不能正常的生活，学习，以及在病态心理的支配下，有自杀或者伤害他人的行为。我觉得对于这点来说，对于精神病人的界定是没有错的，他们确实是需要治疗或者隔离。上面虽然说到平等的问题，但是我觉得那仅仅是站在全体生物的角度来看的。从一个“正常”的群里里面看外面的群体，或者群体外面的个体，这确实是不能平等地看问题。当一个群体或者其个体遭受到群体外力影响时，他们确实有必要采取必要的手段来稳定内部。因为并不是站在全体的角度考虑问题，而是站在群体的高度看问题。</p>

<p>但现实又往往不是因为这样，有时候某些“精神病患者”并没有作出什么伤害他人的举动，而仅仅是因为思想另类而被界定，并且还要接受“正常”人类的未确定但又自认为合理正确的教育和治疗，这确实令我感到心疼。仅仅从这本书所描述的案例来看，我感觉那些“精神病患者”有很多都是平常因为思考时间空间的问题过于深入，才导致在别人眼中思想另类。其实对于一般“正常人”来说，如果不是对那方面有兴趣的话，根本就不会接触那方面的知识，以至于其对于时间空间的存在，形式以及本原感到理所当然，可以说将其“绝对化”了。我怀疑人类的大脑是否能认识到存在于超越自身维度的空间里面所谓的真理，但是我并不排除在这个世界上的某些人能够以某种方式“猜”出那些真理，这是我们无法证实的，也就无法将他们界定。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Old Method to Calculate the Area of A Triangle]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/29/an-old-method-to-calculate-the-area-of-a-triangle/"/>
    <updated>2012-10-29T13:19:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/29/an-old-method-to-calculate-the-area-of-a-triangle</id>
    <content type="html"><![CDATA[<p>之前在高中的时候总结三角形面积公式的时候，碰到一个看上去比较神奇的公式：</p>

<script type="math/tex; mode=display">
S = \sqrt{ s(s - a)(s - b)(s - c) }
</script>

<p>其中$a, b, c$分别为三角形三边边长：</p>

<script type="math/tex; mode=display">
s = \frac{1}{2}(a + b + c)
</script>

<p>当时之所以觉得神奇是因为这个公式完全不需要三角形的角度信息，实际上三条边的长度已知就完全可以确定一个三角形，也可以通过这些边的长度来反推角度的信息，但是必要不大，因为有更为简便的方式来用这些边的长度来直接算出三角形的面积，即上面给出的公式。高中的时候只是觉得很神奇，却没有想这条公式是如何得到的，前天看书的时候再次碰到这条公式，想了一下，有下面的推导过程。</p>

<p>先重复描述一下问题：</p>

<blockquote>
  <p>有三角形$\triangle OAB$，其中三边长度分别为$OA = a, OB = b, AB = c$，求证其面积可以表示为$\sqrt{s(s - a)(s - b)(s - c)}$，其中$s = \frac{1}{2}(a + b + c)$。</p>
</blockquote>

<p>要在没有角度信息的情况下求出三角形面积，首先想到的是用向量方法。由于两向量$\vec{A}, \vec{B}$叉乘的结果是一个与这两个向量都垂直的向量，并且其值为由这两个向量确定的平行四边形的面积。而由这两个向量所确定的三角形的面积刚好是平行四边型面积的一半，仅此，我们有：</p>

<script type="math/tex; mode=display">
S_{\triangle{OAB}} = S = \frac{1}{2}\|\vec{A} \times \vec{B}\|
</script>

<p>根据Lagrange公式($|\vec{A} \times \vec{B}|^2 = |\vec{A}|^2 + |\vec{B}|^2 - (A \cdot B)^2$)，令$\vec{A} = \vec{OA}$以及$\vec{B} = \vec{OB}$，有</p>

<script type="math/tex; mode=display">
(2S)^2 = a^2 b^2 - (\vec{A} \cdot \vec{B})^2
</script>

<p>同时，根据余弦定理，又有：</p>

<script type="math/tex; mode=display">
c^2 = a^2 + b^2 - 2\vec{A} \cdot \vec{B}
</script>

<p>两式消去点乘项$\vec{A} \cdot \vec{B}$，有：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\eqalign{
    4S^2 
    &= a^2 b^2 - \frac{1}{4}(a^2 + b^2 - c^2)^2 \\
    &= \lbrack ab + \frac{1}{2}(c^2 - a^2 - b^2) \rbrack \lbrack ab - \frac{1}{2}(c^2 - a^2 - b^2) \rbrack \\
    &= \frac{1}{4} (2ab + c^2 - a^2 - b^2)(2ab - c^2 + a^2 + b^2)
}
 %]]&gt;</script>

<script type="math/tex; mode=display">% &lt;![CDATA[

\eqalign{
    S^2
    &= \frac{1}{16} (2ab + c^2 - a^2 - b^2)(2ab - c^2 + a^2 + b^2) \\
    &= \frac{1}{16} (c^2 - (a - b)^2)((a + b)^2 - c^2) \\
    &= \frac{1}{16} (c + a - b)(c - a + b)(a + b + c)(a + b - c)
}
 %]]&gt;</script>

<p>令$s = \frac{1}{2} (a + b + c)$代入上式，即得证。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vector Space of Complex N-tuple]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/23/vector-space-of-complex-n-tuple/"/>
    <updated>2012-10-23T20:23:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/23/vector-space-of-complex-n-tuple</id>
    <content type="html"><![CDATA[<p>向量空间$\Bbb R^n$实际上可以扩充到复数域，从而推广到复数向量空间$\Bbb C^n$。与$\Bbb R^n$类似，对于$\Bbb C^n$我们有</p>

<script type="math/tex; mode=display">
\vec{A} = \vec{B} \Leftrightarrow i = 1, 2, \cdots, n, a_i = b_i, \\
\vec{A} + \vec{B} = (a_1 + b_1, \cdots, a_n + b_n), \\
c\vec{A} = (ca_1, \cdots, ca_n).
</script>

<p>其中上面的常量$a_i, b_i, c$都是复数，由此我们得到了<strong>复n维空间</strong>，记为$\Bbb C^n$。</p>

<p>有很多关于$\Bbb R^n$的定理都可以原封不动地移植到$\Bbb C^n$上，不过与点积有关的定理仍需要进行修正，我们用不全为0的实数的平方和为正这一事实来证明非零向量与自己的点积为正，<strong>由于复数的平方和有可能为负，为了保留正定性，我们必须修改点积的定义。</strong></p>

<h2 id="n">复n维空间的点积定义</h2>

<p>设$\vec{A} = (a_1, \cdots, a_n), \vec{B} = (b_1, \cdots, b_n)$为$\Bbb C^n$中的两个向量，我们用如下的公式来定义它们的点积$\vec{A} \cdot \vec{B}$：</p>

<script type="math/tex; mode=display">
\vec{A} \cdot \vec{B} = \sum^n_{k=1} a_k \overline{b_k} 
</script>

<p>其中$\overline{b_k}$是$b_k$的共轭复数。</p>

<p>根据这样的定义，就有一些定理需要修正了，比如：</p>

<script type="math/tex; mode=display">
\vec{A} \cdot \vec{B} = \overline{ \vec{B} \cdot \vec{A} }, \\
c(\vec{A} \cdot \vec{B}) = (c \vec{A}) \cdot \vec{B} = \vec{A} \cdot (\overline{c} \vec{B}).
</script>

<p>这些都是显而易见的推广，在此就不证明了。</p>

<h2 id="section">一些例子</h2>

<p><strong>1. 证明：对$\Bbb C^n$中任意两个向量$\vec{A}$和$\vec{B}$，有恒等式</strong></p>

<script type="math/tex; mode=display">
\| \vec{A} + \vec{B} \|^2 = 
    \| \vec{A} \|^2 + \| \vec{B} \|^2 + 
    \vec{A} \cdot \vec{B} + 
    \overline{ \vec{A} \cdot \vec{B} }
</script>

<p>证：令$\vec{C} = \vec{A} + \vec{B}$，于是有</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\eqalign{
    \| \vec{A} + \vec{B} \|^2 
    &= \|\vec{C}\| \cdot \|\vec{C}\| \\
    &= \sum^n_{k=1} c_k \overline{c_k} \\
    &= \sum^n_{k=1} (a_k + b_k)(\overline{a_k} + \overline{b_k}) \\
    &= \sum^n_{k=1} (a_k \overline{a_k} + a_k \overline{b_k} + b_k \overline{a_k} + b_k \overline{b_k}) \\
    &= \|\vec{A}\|^2 + \|\vec{B}\|^2 + \vec{A} \cdot \vec{B} + \vec{B} \cdot \vec{A} \\
    &= \|\vec{A}\|^2 + \|\vec{B}\|^2 + \vec{A} \cdot \vec{B} + \overline{\vec{A} \cdot \vec{B}}
}
 %]]&gt;</script>

<p><strong>2. 证明：对于$\Bbb C^n$中的任意两个向量$\vec{A}$和$\vec{B}$，$\vec{A} \cdot \vec{B} + \overline{\vec{A} \cdot \vec{B}}$是实数。</strong></p>

<p>证：由定义有</p>

<script type="math/tex; mode=display">
\vec{A} \cdot \vec{B} + \overline{\vec{A} \cdot \vec{B}} = \sum^n_{k=1} (a_k \overline{b_k} + \overline{a_k} b_k)
</script>

<p>令$a_k = x_{ak} + y_{ak} \jmath, b_k = x_{bk} + y_{bk} \jmath$，代入上式，即可算得其虚部系数为0，所以上式的结果必然是实数。 </p>

<h2 id="n-1">复n维空间的夹角问题</h2>

<p>为了对夹角公式进行修正，在复n维空间中，两个向量之间的夹角有如下定义：</p>

<script type="math/tex; mode=display">
\cos \theta = \frac{\vec{A} \cdot \vec{B} + \overline{\vec{A} \cdot \vec{B}}}{2\|\vec{A}\|\|\vec{B}\|}
</script>

<p>当然，这样定义的原因之一在于，上式右端的值域符合$\cos \theta$的值域，再有则是根据$\Bbb R^n$上的公式$\cos \theta = \frac{\vec{A} \cdot \vec{B}}{|\vec{A}||\vec{B}|}$变形而来，下面简单证明一下值域相等的问题。</p>

<p>由Cauchy-Schwarz不等式有</p>

<script type="math/tex; mode=display">
| \vec{A} \cdot \vec{B} |^2 \leq (\vec{A} \cdot \vec{A})(\vec{B} \cdot \vec{B})
</script>

<p>对其两端开方，有</p>

<script type="math/tex; mode=display">
-\|\vec{A}\|\|\vec{B}\| \leq 
\vec{A} \cdot \vec{B} \leq 
\|\vec{A}\|\|\vec{B}\|
</script>

<p>同理，有$\vec{B} \cdot \vec{A} = \overline{\vec{A} \cdot \vec{B}}$</p>

<script type="math/tex; mode=display">
-\|\vec{A}\|\|\vec{B}\| \leq 
\overline{\vec{A} \cdot \vec{B}} \leq 
\|\vec{A}\|\|\vec{B}\|
</script>

<p>两式相加即可证得其值域为$\lbrack -1, 1 \rbrack$。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Interesting Probability Problem: N Persons in a Circle]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/16/an-interesting-probability-problem-n-persons-in-a-circle/"/>
    <updated>2012-10-16T17:00:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/16/an-interesting-probability-problem-n-persons-in-a-circle</id>
    <content type="html"><![CDATA[<p>今天看到了一道有趣的题目：</p>

<blockquote>
  <p>若n个人站成一排，其中有A，B两人，问夹在A和B之间恰好有r个人的概率是多少？如果他们不是站在一排，而是站在一圈，那结果又是如何呢？</p>
</blockquote>

<p>对于前一个问，解起来并不是太难，只要细心一点一般不会做错。其中n个人排成一排，总的排列数是$n!$，然后考虑为了促成上面描述的状况经过了什么步骤。</p>

<ol>
  <li>
    <p>首先当然是从n个人里面选出r个(记住除去A和B)，让其排在A和B的中间，注意，选出r个人以后还得对其进行排列，所以有</p>

<script type="math/tex; mode=display">
 \dbinom{n-2}r r!
 </script>
  </li>
  <li>
    <p>然后要对剩下的人进行排列，于是有$(n-r-2)!$种排法，排完以后还必须将他们分成两部分排在A的左边和B的右边，这样就有$(n-r-1)$种分法，极端情况是全部排在一边。这样与步骤1结合起来，就有下面的排列数：</p>

<script type="math/tex; mode=display">
 \dbinom{n-2}r r! (n-r-1)!
 </script>
  </li>
  <li>
    <p>最后，将A和B位置交换又能得到一组对称的排列，所以总概率为：</p>

<script type="math/tex; mode=display">
 P = \frac{2 \dbinom{n-2}r r! (n-r-1)!}{n!}
 </script>
  </li>
</ol>

<p>稍微将其化简，有：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
P 
    &= \frac{2 \dbinom{n-2}r r! (n-r-1)!}{n!} \\
    &= \frac{2r!(n-r-1)!}{n!} \frac{(n-2)!}{r!(n-r-2)!} \\
    &= \frac{2(n-r-1)}{n(n-1)}
\end{align}
 %]]&gt;</script>

<p>接着考虑第二问。在第二问中，n个人再也不是排成一排了，所以其总排列数会有所变化。观察下面的排列：</p>

<script type="math/tex; mode=display">
p_1, p_2, p_3, \dotsc p_n
</script>

<p>注意到，当n个人排成一圈以后，本来在排成一排的时候出现的排列会重复，比如：</p>

<script type="math/tex; mode=display">
p_2, p_3, \dotsc p_n, p_1 \\
p_3, \dotsc p_n, p_1, p_2
</script>

<p>等等的排列都是重复的，重复次数为n。比如排成一个圈以后排列数是P，那么这P个排列中，每一个排列都会在排成一排的情况中衍生出n种不同的排列，所以排成一个圈的排列数刚好是排成一排的排列数的$1/n$，所以其总排列数为$(n-1)!$。</p>

<p>之后的计算其实跟第一问比较相似，就是有一点点不一样而已。由于方向是从A到B，所以A与B之间的人还是需要排序的。从$n-2$个人里面抽出r个人，并对他们进行排列：</p>

<script type="math/tex; mode=display">
\dbinom{n-2}r r!
</script>

<p>然后还要对剩下的人进行排列，即$(n-r-2)!$，但是跟第一问不同的是，这些人并不需要分成两个部分了。因为大家都排成一个圈，他们总是连在一起的。<strong>再有一点比较重要的，那就是A和B即使调换位置也没有增加什么排列，那是因为A到B有序，并且圈是循环的，所以那r个人的位置相对于A和B来说是不变的，即时A和B交换了位置，那么那r个人的位置也是会反过来的。</strong>这样就有如下的概率：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
P 
    &= \frac{\dbinom{n-2}r r! (n-r-2)!}{(n-1)!} \\
    &= \frac{(n-2)!}{r!(n-r-2)!} \frac{r!(n-r-2)!}{(n-1)!} \\
    &= \frac{1}{n-1}
\end{align}
 %]]&gt;</script>

<p>可以看出最后的概率是跟r一点关系都没有的，乍一看有点神奇，其实认真想想，还有一个 更为简便的方法来解决这个问题。这个问题的第二问可以转化为：B出现在从A数起的第r+1个位置的概率。</p>

<p>由于大家排成一个圈，所以A的位置并不重要，但是B必须和A相隔r个人，而这个位置是确定的，那就相当与要在$n-1$个位置里面挑一个，那当然，挑中这个位置的概率就是$1/(n-1)$了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Integral Form of Factorial]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/16/the-integral-form-of-factorial/"/>
    <updated>2012-10-16T11:36:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/16/the-integral-form-of-factorial</id>
    <content type="html"><![CDATA[<p>最近在复习概率，在看到Stirling公式的时候，顺便看到了阶乘的积分形式，在此记录一下。</p>

<h2 id="section">阶乘定义</h2>

<p>我们最初接触阶乘的时候估计是使用如下定义：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

f(n) =
\begin{cases}
    0         & , n = 0 \\
    nf(n - 1) & , n > 0 \\
\end{cases}
 %]]&gt;</script>

<h2 id="section-1">阶乘积分定义</h2>

<p>如果要寻找该公式对应的积分，那必须满足一下的条件（假设该积分为$F(n)$）：</p>

<ol>
  <li>当$n = 0$，$F(n) = 0! = 1$。</li>
  <li>当$n \in \Bbb Z$，$F(n) = n!$。</li>
  <li>当$n \notin \Bbb Z$，有$(\lfloor n \rfloor - 1)! &lt; F(n) &lt; \lceil n \rceil !$。</li>
</ol>

<p>为了满足上述条件，考虑下面的函数：</p>

<script type="math/tex; mode=display">
    F(n) = \int_x^{\infty} x^n e^{-x} \mathrm{d}x
</script>

<p>用分部积分，有：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
    \int_0^{\infty} x^n e^{-x} \mathrm{d}x 
        &= \lim_{x \to \infty} -x^n e^{-x} - n \int_0^{\infty} x^{n-1} e^{-x} \mathrm{d}x \\
        &= nF(n - 1)
\end{align}
 %]]&gt;</script>

<p>由此满足了其递归的定义，既然满足了递归的定义，那么当$n \in \Bbb Z$的时候，必然满足上面的条件2。根据函数图像，条件3也能够验证。对于第一点条件，有当$n = 0$的时候，我们有</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
    \int_0^{\infty} x^n e^{-x} \mathrm{d}x 
        &= \int_0^{\infty} e^{-x} \mathrm{d}x \\
        &= -\lim_{x \to \infty} e^{-x} + e^0 = 1
\end{align}
 %]]&gt;</script>

<p>所以上述定义的函数$F(n)$确实是可以作为阶乘的积分定义的。</p>

<h2 id="section-2">非整数阶乘</h2>

<p>有了阶乘的积分定义以后，计算阶乘的时候就没有必要要求是整数了。比如计算$4.5!$，根据其阶乘的递归定义，我们有</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
4.5! 
    &= 4.5 \times F(4.5 - 1) \\
    &= 4.5 \times 3.5 \times F(3.5 - 1) \\
    &= 4.5 \times 3.5 \times 2.5 \times F(2.5 - 1) \\
    &= 4.5 \times 3.5 \times 2.5 \times 1.5 \times F(1.5 - 1) \\
    &= 4.5 \times 3.5 \times 2.5 \times 1.5 \times F(0.5)
\end{align}
 %]]&gt;</script>

<p>于是我们需要计算的就仅仅只有最后一项$F(0.5)$了。将其代入积分，同样使用分部积分法，我们有：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
    \int_0^{\infty} \sqrt{x} e^{-x} \mathrm{d}x 
        &= 2 \int_0^{\infty} y^2 e^{-y^2} \mathrm{d}y \\ 
        &= -\lim_{y \to \infty} y e^{-y^2} - \int_0^{\infty} e^{-y^2} \mathrm{d}y \\
        &= \frac{\sqrt{\pi}}{2}
\end{align}
 %]]&gt;</script>

<p>于是：</p>

<script type="math/tex; mode=display">
F(4.5) = 4.5 \times 3.5 \times 2.5 \times 1.5 \times \frac{\sqrt{\pi}}{2}
</script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding MathJax Support to Octopress]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/16/adding-mathjax-support-to-octopress/"/>
    <updated>2012-10-16T00:14:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/16/adding-mathjax-support-to-octopress</id>
    <content type="html"><![CDATA[<p>最近开始复习数学了，只可惜github上的markdown并不支持数学公式，所以有些总结估计还是得放在博客里，下面是效果：</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
\mbox{Union: } & A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \\
\mbox{Concatenation: } & A\circ B  = \{xy\mid x\in A \mbox{ and } y\in B\} \\
\mbox{Star: } & A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
\end{align}
 %]]&gt;</script>

<p>步骤主要参考以下博客，既然他已经说得如此详细，我就没必要浪费唇舌了，所以直接上链接吧。</p>

<p><a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye, UC]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/10/goodbye/"/>
    <updated>2012-10-10T10:30:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/10/goodbye</id>
    <content type="html"><![CDATA[<p>昨天上午找完老师以后，下午就去UC辞职了，从而结束了3个月的实习。</p>

<p>这三个月确实非常难忘，跟其他同学的实习对比了一下，UC的待遇确实是很优厚的，无论是工作环境还是伙食。但毕竟我保研在身，而且想做的事情还有很多，考虑到最后也还是要回到学校，所以还是趁早辞职了。</p>

<p>回想最近一年，我都是在不停地写代码，工程能力可能有所提高，但是渐渐地我发现，我好像一直都在原地踏步，原因在于，我可能把过多的时间都放在写代码上面了，所以没有太多的时间看书以及提高自己的理论修养。我本身非常喜欢数学和物理，但每每想到我每天都在以飞快的速度忘记它们的时候，我就略感伤心。虽然，从工作层面上来看，这些知识其实也没有太大的应用，但是我却不甘心这些辛辛苦苦学来的东西最后是没有用处的。于是我打算先花点时间重温一下它们，如果我每天继续上班的话，那显然是没有这个时间的，所以我还是辞职回到了学校。</p>

<p>在UC工作的过程中，我还学到最重要的一件事情，那就是做事一定要专心以及专一，因为在工作分配上一般都是一个时段只有一项工作，这就直接保证了专心。但是如果不是在工作中，自己可能会有很多异想天开的想法，有时候还会非常冲动地希望一一将其实现，想法当然是好的，但如果不忍住诱惑，往往难以完成。正如上个月的我，开了很多项目，却又无法分身，最后导致各项目都进展缓慢甚至停滞，这无疑得不偿失。</p>

<p>接下来的计划如上所说，先花点时间去复习一下数学，毕竟这是我后面所需要到的重要武器，估计会有比较长的一段时间远离代码了…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translation: Juste une photo de toi]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/10/03/translation-juste-une-photo-de-toi/"/>
    <updated>2012-10-03T13:48:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/10/03/translation-juste-une-photo-de-toi</id>
    <content type="html"><![CDATA[<p>这两天听到一首比较有感觉的歌，歌手没有什么特别，但是音乐感觉不错。</p>

<pre><code>Juste une photo de toi [Pokara]

Si on faisait un flash-back 如果我们能回到过去
On revenait en arrière 那么就让我们回到从前
Pour te rappeller ce qu'tu me disais 让你回忆起你跟我说过的话
Qu'on resterait ensemble jusqu'à redevenir poussières 你说我们会一直厮守，直到化为尘土
Au final tout ça se n'était que des paroles en l'air 可到了最后，所有的这一切仅仅是虚无飘渺的诺言罢了
Et j'ai pas vu que tu jouais 我并没有看到你在玩
Toute cette histoire un jeu d'échecs dont tu étais la reine 但你却是棋盘上的皇后
Ohohoh 噢噢噢

J'ai l'coeur en vrac et 我心乱如麻
Si je dérape c'est  如果我出什么差错
Parce que t'es parti, aussi vite que t'es arrivée 那是因为你来去匆匆
Et tu t'en es allée avec un bout de moi 你的离开使我残缺不全
Maintenant 现在

Tout ce qu'il me reste 我所剩下的
C'est juste une photo de toi 就只有一张你的照片
Juste une photo de toi 只有一张你的照片
Juste une photo de toi 只有一张你的照片
Tout ce que tu m'laisse 你留下来给我的
C'est juste une photo de toi 就只有一张你的照片
Juste une photo de toi 只有一张你的照片
Juste une photo de toi 只有一张你的照片
Na Na Na Na Na Na Na Na Na Na Na 不不不不不不不不

La musique qui s'arrête 音乐停止了
Le rideau qui se baisse 帷幕降下了
Et mon sourire disparait quand les lumières s'éteignent 舞台灯光熄灭的瞬间，我的笑容也消逝了
Même les applaudissements ne pourront rien y faire 甚至那里的掌声也戛然而止了
Et pour toi j'étais prêt à remuer ciel et terre 为了你我都做好了上天下地的准备
Mais t'as pas vu tout c'que j'ai fais  但是我做得一切对你来说都形同虚设
J'ai perdu ma bataille il n'y a plus rien à faire 我已经输了，再也没有什么可以做了
Ohohoh 噢噢噢

J'ai l'coeur en vrac et 我心乱如麻
Si je dérape c'est  如果我出什么差错
Parce que t'es parti, aussi vite que t'es arrivée 那是因为你来去匆匆
Et tu t'en es allée avec un bout de moi 你的离开使我残缺不全
Maintenant 现在

Tout ce qu'il me reste 我所剩下的
C'est juste une photo de toi 就只有一张你的照片
Juste une photo de toi 只有一张你的照片
Juste une photo de toi 只有一张你的照片
Tout ce que tu m'laisse 你留下来给我的
C'est juste une photo de toi 就只有一张你的照片
Juste une photo de toi 只有一张你的照片
Juste une photo de toi 只有一张你的照片
Na Na Na Na Na Na Na Na Na Na Na 不不不不不不不不

Maintenant je maudit le jour où j't'ai rencontrer 现在，我抱怨我们相遇的那一天
J'aurai pas dû te regarder 当时，我不应该看着你
Si t'es plus là 如果你已经不在了
Tout ces souvenirs qu'est-ce que j'en fais 那么我留着你的记忆干什么呢？
Je veux juste t'oublier 我只想把你忘记

[REFRAIN]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translation: Il y a trop de gens qui t'aiment]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/09/28/translation-il-y-a-trop-de-gens-qui-taime/"/>
    <updated>2012-09-28T12:38:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/09/28/translation-il-y-a-trop-de-gens-qui-taime</id>
    <content type="html"><![CDATA[<p>到了大四终于没有什么课了，于是希望把法语学好一点。计划之一就是翻译歌曲了。还记得当初听的第一首法语歌是Hélène Segara的《Encore une fois》，从此就爱上了她的声音，于是打算从她的歌翻译起。总不能听了一年有多都不知道她唱什么吧…经过翻译我才发现一点都不容易，即使只有少部分单词不会，但是语言转换起来却有非常大的困难。希望各位读者指正吧，欢迎各种建议。</p>

<p>有两个疑惑的地方：</p>

<ul>
  <li><strong>trop de gens qui t’aiment</strong>里面的<strong>de</strong>我听了无数次都听不到。</li>
  <li><strong>je ne sortirai pas indemne de cet amour avec toi</strong>里面的<strong>de</strong>我听了无数次都听不到。</li>
</ul>

<p>以下基本上都是意译，固有一些地方不是对应原文的。</p>

<pre><code>Il y a trop de gens qui t'aiment [Hélène Segara]

Je te regarde parler avec les gens 我看着你在人群里谈笑风生
Tu me sembles si léger même transparent 在我眼中，你是如此地触不可及
J'regarde passer les jours, la vie en me disant 生活一天天地过去
Je n'cherche pas l'amour, je m'y attends 我不会去寻觅爱情，只是独自等待
J'te regarde t'amuser et je fais semblant(1) 我假装看着你自娱自乐
Mais je n'peux pas t'empêcher d'être un enfant 但是我却不能像小孩子那样去阻止你
Toi tu fais de grands gestes, tu as l'air si content 你的动作大大咧咧的，看上去非常高兴
Tu vois des fois j'déteste ce que je ressens(2) 我厌恶这样的感觉，你都看到过几次了

Il y a trop de gens qui t'aiment 有太多的人爱你了
Et tu ne me vois pas 以至于你看不到我的存在
Je ne sortirai pas indemne de cet amour avec toi 我并不能从甜蜜的爱情中全身而退
Trop de gens qui t'aiment 有太多的人爱你了
Qui tournent autour de toi 她们都围在你身边
Tous les mots d'amour 我所有的那些甜言蜜语
Que je sème(3) tu ne les entends pas 你没有听到

J'me sens si loin de toi à des moments(4) 有时候，我觉得与你相隔千里
Je n'voudrais pas qu'tu crois que je t'attends 我并不想让你以为我在等你
J'me force à espérer, mais je me mens 我真希望如此，但我只是自欺欺人罢了
Alors je te regarde t'éloigner(5) tout doucement 于是就看着你温柔的背影渐行远去

Il y a trop de gens qui t'aiment 有太多的人爱你了
Et tu ne me vois pas 你根本看不到我的存在
Je ne sortirai pas indemne de cet amour avec toi 我并不能从甜蜜的爱情中全身而退
Trop gens qui t'aiment 太多的人爱你了
Qui tournent autour de toi 她们都围在你身边
Et moi évidemment, je t'aime à mes dépends 我，毋庸置疑，即使牺牲一切也会爱着你
Il y a trop de gens qui t'aiment 有太多的人爱你了
Et tu ne me vois pas 你根本看不到我的存在
Je ne sortirai pas indemne cet amour avec toi 我并不能从甜蜜的爱情中全身而退
Trop de gens qui t'aiment 有太多的人爱你了
Et tu ne vois même pas 你甚至连她们都无视了
Qu'c'est à cause de toi 正是因为你
Que je mène(6) chaque jour ce drôle de combat(7) 我每天才那么可笑地纠结着
Trop gens qui t'aiment 有太多的人爱你了
Et tu ne vois même pas 你甚至连她们都无视了
Qu'c'est à cause de toi 正是因为你
Que je mène chaque jour ce drôle de combat 我每天才那么可笑地纠结着
</code></pre>

<h2 id="annotation">Annotation</h2>

<ol>
  <li>faire semblant de faire qqch. 假装做某事</li>
  <li>ressentir 感到，觉得</li>
  <li>semer 播种，撒，散花</li>
  <li>à des moments 有时候</li>
  <li>éloigner 离开，移开，疏远</li>
  <li>mener 带领，率领，引导，进行</li>
  <li>combat 战争</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Framework for expressjs and Client-side js MV* Framwork]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/09/27/framework-for-expressjs-and-client-side-js-mv-star-framwork/"/>
    <updated>2012-09-27T16:00:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/09/27/framework-for-expressjs-and-client-side-js-mv-star-framwork</id>
    <content type="html"><![CDATA[<p>这段时间一直希望自己写一个单词学习的应用，因为过去用过太多的背单词软件，但是基本上都不符合我的学习规律，并没有能提高我学习外语的热情，鉴于这个学期希望好好学好法语，于是才有了这样的动力。</p>

<h2 id="section">工具</h2>

<p>我将其命名为<strong>Mnemon</strong>，项目详情可以参看<a href="https://github.com/Aquietzero/Mnemon">这里</a>。起名原因以及其含义相信读计算机的朋友们应该一目了然了。我希望完全用javascript来完成这个应用，所以采用如下组合：</p>

<ul>
  <li><strong>数据库：</strong> Mongodb</li>
  <li><strong>服务器：</strong> Nodejs</li>
  <li><strong>服务端框架：</strong> Express.js</li>
  <li><strong>客户端框架：</strong> Ember.js</li>
</ul>

<h2 id="section-1">文件目录结构</h2>

<p>由于这个项目才刚刚开始，这篇文章打算简单描述一下Mnemon的架构。</p>

<h3 id="section-2">外层目录结构</h3>

<p>下面是最外层的文件结构：</p>

<pre><code>───┬─── client
   ├─── config
   ├─── doc 
   ├─── lib 
   ├─── public 
   ├─── server 
   ├─── index.js
   ├─── package.json
   ├─── README.md
   └─── server.coffee
</code></pre>

<p>下面先简单讲述一下这个最外层的目录结构。最主要的两个文件夹分别是<code>client</code>和<code>server</code>，分别存放客户端和服务端的代码。<code>config</code>里面存放关于这个应用的服务端配置文件，<code>doc</code>存放相关文档，即开发日志，问题总结之类的文档。<code>lib</code>存放整个项目所用到的一些共用库。<code>index.js</code>则是整个应用的入口，其中包含了对<strong>coffeescript</strong>的支持，从这个文件开始的所有js文件实际上都是coffeescript来的。<code>package.json</code>描述了这个项目的包依赖。<code>server.coffee</code>则是真正意义上的应用入口，但是它是靠<code>index.js</code>来调用的。</p>

<h3 id="section-3">客户端目录结构</h3>

<p>下面详细看看这些目录里面的内容，首先是客户端的：</p>

<pre><code>client
  └───┬── coffee 
      │     ├── models 
      │     ├── controllers 
      │     └── views
      ├── css 
      ├── js 
      ├── libs 
      └── index.html
</code></pre>

<p>客户端里面放的实际上是一整个分离的客户端代码，<code>index.html</code>是客户端的入口，<code>libs</code>里面放着客户端所需要的库，由于我这个应用客户端的框架用的是<strong>Ember.js</strong>，于是这里面就放着与<strong>Ember.js</strong>相关的库。<code>css</code>是整个客户端的样式代码。在<code>coffee</code>里面则放着客户端最核心的代码，即MVC的代码，其后会被编译成对应的javascript，最后在<code>index.html</code>里面引用的也就是这些编译好的javascript代码。</p>

<h3 id="section-4">服务端目录结构</h3>

<p>接下来看看服务端的代码：</p>

<pre><code>server 
  └───┬── assets 
      │     ├── javascripts 
      │     └── stylesheets 
      ├── controllers 
      ├── models
      ├── views 
      └── helpers
</code></pre>

<p>服务器端其实代码结构跟客户端也没有太大的差别，实际上大家都是MVC结构嘛。这样的目录结构实际上是参照rails的目录结构来构建的。但是这里的<code>javascript</code>以及<code>stylesheet</code>实际上是服务端渲染页面的代码，这个是需要注意的。</p>

<h2 id="section-5">配置以及启动</h2>

<p>然后最重要的，各部分的桥梁可以说是<code>config</code>文件夹了：</p>

<pre><code>config 
  └───┬── config.coffee 
      ├── db.coffee
      └── routes.coffee
</code></pre>

<p>其中<code>config.coffee</code>是进行express的各种配置工作，比如静态路径，比如根目录，比如端口号之类。<code>db.coffee</code>主要是对数据库进行链接。<code>routes.coffee</code>就是路由映射了。</p>

<p><strong>这样的应用有点特别之处，那就是为什么要专门分开客户端和服务端两个部分呢？正是因为在客户端使用了MVC的框架。在客户端使用了MVC框架意味着客户端自己有一套私有的路由，那是用来控制客户端行为的状态转换的，这样实际上跟服务端就发生了冲突，因为客户端的逻辑不用经过服务端就能跳转了。</strong>既然如此，我们就干脆将它们分开，既然客户端逻辑那么重，我们的服务端就干脆只提供服务好了，让客户端的MVC来自己处理跳转逻辑。这样，当客户端需要信息的时候，就直接用异步的方式向服务器请求，请求还是遵循REST的风格，这样express也不至于没有用。</p>

<p>将客户端以及服务端分开需要两处启动。服务端直接用如下的命令启动：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo mongod
</span><span class="line">node index
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>客户端可以放在web根目录下，如果是本地应用的话也可以开python的服务器，这样打开客户端里面的<code>index.html</code>即可访问应用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summary of July, August and September]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/09/25/summary-of-july/"/>
    <updated>2012-09-25T18:38:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/09/25/summary-of-july</id>
    <content type="html"><![CDATA[<p>自从六月底的助教结束以后，我就来到了UC实习。这段时间不能说学到了很多东西，但也不是什么都没有学到。这段时间感觉很多事务都同时进行着，有点乱，有点充实，也有点彷徨。</p>

<h2 id="uc">主线1：UC实习</h2>

<p>贯穿这三个月的主线无疑是在UC的实习生活了。说实话，在UC工作我非常愉快，早上九点半上班，包三餐，并且工作环境也还算不错，我每天在座位上效率都很高，但是这是有代价的，这个容后再说。一进UC给我们的任务就是写一个HTML5的游戏，当然，这只是一个热身的项目，为期一个月，旨在要我们熟悉整个开发的流程，并且让我们体验团队合作以及一股作气专心做一件事情的威力，我也确实感受到了。在每天的编程之中，我都充满激情，那些学习的时候感到非常抽象的设计模式居然能自然地在代码重构的时候运用，这是最令人鼓舞的一件事情了。</p>

<p>其实我本来就没正式写过什么游戏，这次的写游戏经历确实使我受益终生。在之后，我又写了两个小游戏，一个是像素风格的贪吃蛇，另一个是消金币。虽然这些游戏逻辑都非常简单，但是写到就发现，有太多的细节需要斟酌了。比如我们的第一个游戏，在此还是现将其叫做2D版的temple run吧，主角跳的动画，获取道具的动画，以及背景的云雾如何票动，这些都是一些看似微小，但是实际上却非常影响整个游戏的体验。这个游戏最为失败的地方就是没有人帮我们设计主角，以至于到最后，其实也无所谓最后，我们的主角就仅仅是一个没有五官的小人。</p>

<p>在接下来的八月以及九月，就基本上是自由学习时间了。在工作更迭的时候，我被问到是希望做游戏还是希望做应用，我当然毫不犹豫地说是做游戏，但是由于UC主要并不是以游戏开发为主，所以我就变得比较闲了，任务就是研究nodejs，看看它能为服务端的游戏带来什么。其实我本来就想学一下nodejs，这下名正言顺了。但是由于这个东西仍在飞速发展当中，很多东西都在变。说实话，看了一个月的mongodb，socket.io，express等，发现这些东西确实好美，在应用他们的时候，我也用上了coffeescript，这个东西一直没有什么机会用，就是因为我之前开的一些项目都是用javascript的，不是太愿意将几千行的代码转为coffeescript，于是就一直不了了之。但是最近用起来确实是很爽，爽到我基本不去考虑效率了。</p>

<p>在我们团队里，基本上就只有我有那么多的自由学习时间，他们都在为公司做贡献。其实当初我也有点不好意思，但是慢慢地就没什么感觉了。因为我发现他们做的东西我并不是太感兴趣，虽然说为公司做事是不能讲兴趣的，但是我也有点庆幸我不用去做那些事情。其好处就是我的物理引擎进展比较大，当然，在我写这篇文章的时候又遇到了瓶颈，这个后面再说。</p>

<p>既然公司那么自由，待遇又那么好，那究竟还有什么不好的呢？不好之处就是时间浪费比较严重。因为来回车程都浪费了一个半小时以上，并且即使晚上回来才八点左右，但是实际上我已经筋疲力竭了，所以每天晚上回来不是看片就是聊天，并没有太多的代码或者阅读贡献，非常惭愧…</p>

<h2 id="section">主线2：物理引擎</h2>

<p>其实很久以前就想自己写一个物理引擎以及渲染引擎了，但是THREE.js已经做得很好了，于是我就把目光投向了物理引擎。不过说实话，我并不是想要做出什么特别厉害并且效率非常高的引擎，我只是想学习一下引擎的架构，并且对那些碰撞算法感兴趣而已，最后做得如何还不得而知。</p>

<p>这个项目从我做助教的时候就开始了，大概两周的时间就把简单的牛顿力学实现完了。然后剩下的两个多月的日子都是纠结在碰撞检测上面，那本六百多页的巨著现在也只是进行到三分之一多一点点而已，其实我对效率还是有点担心的，因为实在是非常慢，虽然基本上每周都有进展。但是由于只是一个人在做，遇到困难的问题会有惰性，又没有谁可以讨论，所以比较悲剧。不管如何，既然坚持了那么就我就希望我能继续做下去，无论是做成物理引擎还是做成算法的演示系统，我都会感到很快乐的。</p>

<h2 id="section-1">主线3：琐碎项目</h2>

<p>除了这两条主线以外，还有一些琐碎的项目，但是这些基本上都是没有头没有尾的，例如上面说到的像素风格贪吃蛇，这个小游戏仅仅写了一个下午，但是我觉得这个东西可以做下去的方向挺多，也挺吸引，但是却没有继续了，或者在未来会继续。另外，本来还希望写一个3D的数据可视化，但是后来发现需要的知识和时间是挺多的，所以为了保证物理引擎的进度，也还是暂停了。还有一些比较小的，这里就不说了。</p>

<p>总的来说，这个暑假还是算充实，但由于编码太多，或许真正学到的没有太多，不过我觉得无论在架构方面还是在数学方面都有了不同程度的提高。接下来努力的方向估计还是继续打好数学的基础了，毕竟那才是研究所需的坚实后盾。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On NodeJs Modules]]></title>
    <link href="http://Aquietzero.github.com/blog/2012/09/11/on-nodejs-modules/"/>
    <updated>2012-09-11T10:18:00+08:00</updated>
    <id>http://Aquietzero.github.com/blog/2012/09/11/on-nodejs-modules</id>
    <content type="html"><![CDATA[<p>对于Node的初学者来说，可能对模块化方面比较模糊，网上的资料比较分散，在此总结一下。</p>

<h2 id="require--exports">require 和 exports</h2>

<p>个人感觉客户端js的最大缺点就是模块化难，原因有二：</p>

<ol>
  <li>JavaScript没有类的概念，虽然可以用一些方法来模拟类，但是远没有直接用<code>class</code>定义来得直接，针对这个缺点，可以用<strong>CoffeeScript</strong>来替代，但在下一篇文章会说说如何用JavaScript来模拟类。</li>
  <li>JavaScript没有包含文件的功能，这就导致了必须自己来组织文件的顺序，从而在<code>index.html</code>里面按顺序把包含的<code>.js</code>文件一一列出。当然还有其他的方式，但是原理还是如此。使用工具的话推荐<a href="https://github.com/jrburke/requirejs">RequireJs</a>以及<a href="https://github.com/substack/node-browserify">browserify</a>，但使用起来依然不是那么方便。</li>
</ol>

<p>为此，在Node里面就方便很多了，其默认将各个文件看作是各个独立的<strong>Module</strong>，即在一个文件里面定义的变量，函数都不为其他文件所见，下面举个简单的例子。比如在文件<code>add.js</code>如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// add.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">file_name</span> <span class="o">=</span> <span class="s1">&#39;add.js&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>那么在别的文件是不能访问<code>file_name</code>这个变量以及<code>add</code>这个函数的，如果要在别的文件里面使用它们，那么就必须先把它们<strong>暴露</strong>到这一个文件模块的外部，可以用如下的方式：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// add.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">file_name</span> <span class="o">=</span> <span class="s1">&#39;add.js&#39;</span><span class="p">;</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">file_name</span> <span class="o">=</span> <span class="nx">file_name</span><span class="p">;</span>
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="nx">add</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样，我们就可以在别的文件使用这些变量了，在<code>use.js</code>里面使用方式如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// use.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">add_file</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./add&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add_file</span><span class="p">.</span><span class="nx">file_name</span><span class="p">);</span> <span class="c1">// output =&gt; add.js</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add_file</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">));</span> <span class="c1">// output =&gt; 7</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>由此可以看出，在<code>add.js</code>里面，我们把需要暴露的变量绑定到<code>exports</code>对象上面，然后真正返回出去的实际上是<code>exports</code>对象，在<code>use.js</code>里面调用<code>require</code>语句的时候，返回出来的<code>exports</code>对象被<code>add_file</code>变量接住了，所以就可以使用那些本来绑定在<code>exports</code>对象上面的变量了。</p>

<h2 id="exports--moduleexports">exports 和 module.exports</h2>

<p>既然<code>exports</code>是这样的一个对象，那么我们也可以这样进行绑定，比如<code>person.js</code>如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// person.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">Person</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class="line">    <span class="k">this</span><span class="p">.</span><span class="nx">age</span>  <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">introduce</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">+</span> <span class="s1">&#39; years old.&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">Person</span><span class="p">;</span>
</span><span class="line"><span class="c1">// exports = Person; DOES NOT WORK!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后在<code>class.js</code>里面调用：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// class.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">Person</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./person&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="kr">class</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">    <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Tom&#39;</span>  <span class="p">,</span> <span class="mi">13</span><span class="p">),</span>
</span><span class="line">    <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Jim&#39;</span>  <span class="p">,</span> <span class="mi">12</span><span class="p">),</span>
</span><span class="line">    <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s1">&#39;Mary&#39;</span> <span class="p">,</span> <span class="mi">12</span><span class="p">)</span>
</span><span class="line"><span class="p">];</span>
</span><span class="line">
</span><span class="line"><span class="kr">class</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">person</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">person</span><span class="p">.</span><span class="nx">introduce</span><span class="p">();</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="cm">/**</span>
</span><span class="line"><span class="cm"> * output:</span>
</span><span class="line"><span class="cm"> * I am Tom. I am 13 years old.</span>
</span><span class="line"><span class="cm"> * I am Jim. I am 12 years old.</span>
</span><span class="line"><span class="cm"> * I am Han meimei. I am 13 years old.</span>
</span><span class="line"><span class="cm"> */</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看出，这个时候把<code>Person</code>作为整个模块的输出，那么<code>exports</code>和<code>module.exports</code>有什么区别呢？<strong>实际上，<code>exports</code>只是<code>module.exports</code>的一个helper，<code>exports</code>的作用在于收集需要暴露的变量，并将其包装为一个对象交给<code>module.exports</code>进行输出，所以<code>exports = Person</code>没有任何效果，<code>Person</code>没有绑定到<code>exports</code>。</strong>既然这样，写的时候就必须注意了，因为<code>exports</code>最后会交给<code>module.exports</code>进行输出，所以如果这两者同时存在，绑定到<code>exports</code>的变量会被<code>module.exports</code>的值所覆盖，即：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">Person</span><span class="p">;</span>
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">something</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span> <span class="c1">// `something` is blocked.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">模块化组织</h2>

<p>明白了上面所说的以后，进行模块化组织就很方便了，看看如下的文件结构：</p>

<pre><code>└─┬─ lib
  │   ├── add.js
  │   ├── sub.js
  │   └── math.js
  └─ use.js
</code></pre>

<p>个文件如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c1">// add.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">add</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">// sub.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">sub</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">add</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">// math.js</span>
</span><span class="line"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">add</span><span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./add&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="nx">sub</span><span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./sub&#39;</span><span class="p">),</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="c1">// use.js</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">math</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/math&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">math</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">));</span> <span class="c1">// output =&gt;  7</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">math</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">));</span> <span class="c1">// output =&gt; -1 </span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
</feed>
